{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/actvity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/Layout/NavBar.tsx","features/Activities/Dashboard/ActivityFilters.tsx","features/Profiles/FollowButton.tsx","features/Profiles/ProfileCard.tsx","features/Activities/Dashboard/ActivityListIemAttendee.tsx","features/Activities/Dashboard/AcivityListItem.tsx","features/Activities/Dashboard/ActivityList.tsx","features/Activities/Dashboard/ActivityListItemPlaceHolder.tsx","features/Activities/Dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/Layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/CategoryOptions.ts","app/common/form/MyDateInput.tsx","features/Activities/Form/ActivityForm.tsx","features/Activities/Details/ActivityDetailsChat.tsx","features/Activities/Details/ActivityDetailsHeader.tsx","features/Activities/Details/ActivityDetailsInfo.tsx","features/Activities/Details/ActivityDetailsSidebar.tsx","features/Activities/Details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/Profiles/ProfileEdit.tsx","features/Profiles/ProfileAbout.tsx","features/Profiles/ProfileActivities/ProfileActivitiesCard.tsx","features/Profiles/ProfileActivities/ProfileActivityLayout.tsx","features/Profiles/ProfileActivities/ProfileActivities.tsx","features/Profiles/ProfileFollow.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/Profiles/ProfilePhotos.tsx","features/Profiles/ProfileContent.tsx","features/Profiles/ProfileHeader.tsx","features/Profiles/ProfilePage.tsx","app/Layout/PrivateRoute.tsx","app/Layout/App.tsx","reportWebVitals.ts","app/Layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","Object","values","flat","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","Profiles","selected","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","toggleFollow","listFollowing","predicate","listActivites","Activity","init","assign","ActivityFormValues","title","category","description","date","city","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","undefined","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","key","loadActivities","setLoadingInitial","axiosParams","result","setActivity","setPagination","console","log","loadActivity","getActivity","runInAction","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeDisplayName","bio","updateAttendeeImage","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","loadingProfile","uploading","followings","loadingFollow","activeTab","userActivites","loadingActivities","activityTab","setActivityTab","setActiveTab","resetProfile","loadProfile","photo","photos","isMain","setImage","activityStore","p","setDisplayName","followingCount","loadFollowings","loadUserActivities","profileStore","UserStore","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","name","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","className","onChange","Reveal","animated","Content","visible","fluid","hidden","basic","event","preventDefault","followHandler","Card","Description","length","substring","truncate","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","useState","index","activeIndex","setActiveIndex","Segment","Group","Label","textAlign","marginBottom","Accordion","Title","prevState","secondary","ActivityListIemAttendee","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceHolder","margin","Placeholder","minHeight","Line","Paragraph","disabled","contextRef","useRef","loadingNext","setLoadingNext","useEffect","Grid","Column","Ref","innerRef","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Rail","Sticky","context","offset","styleElement","zIndex","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","autoCapitalize","placeholder","type","render","ValidationErrors","Message","err","confirmPassword","validationSchema","Yup","required","test","parent","isValid","dirty","isLoggedIn","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","_","setValue","onBlur","setTouched","categoryOptions","MyDateInput","useParams","useHistory","nullable","enableReinitialize","uuid","submitHandler","autoComplete","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","Or","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","stye","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","top","ribbon","verticalAlign","relaxed","divided","Extra","GridColumn","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","setEditMode","isCurrentUser","Tab","Pane","ProfileEdit","ProfileActivitiesCard","objectFit","Meta","itemsPerRow","panes","menuItem","onTabChange","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","Row","centered","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","e","currentTarget","setMainPhotoHandler","deletePhotoHandler","ProfileFollow","menu","menuPosition","Statistic","Divider","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.bacd169c.chunk.js","sourcesContent":["export interface Pagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n    data: T;\r\n    pagination: Pagination;\r\n\r\n    constructor(data: T, pagination: Pagination) {\r\n        this.data = data;\r\n        this.pagination = pagination;\r\n    }\r\n}\r\n\r\nexport class PagingParams {\r\n    pageNumber: number;\r\n    pageSize: number;\r\n\r\n    constructor(pageNumber: number = 1, pageSize: number = 3) {\r\n        this.pageNumber = pageNumber;\r\n        this.pageSize = pageSize;\r\n    }\r\n}","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { Activity, ActivityFormValues } from \"../models/actvity\";\nimport { history } from '../../index'\nimport { store } from \"../stores/store\";\nimport { User, UserFormValues } from \"../models/user\";\nimport {Photo, Profile, UserActivity} from '../models/profile'\nimport { PaginatedResult } from \"../models/pagination\";\n\nconst sleep = (delay: number) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n};\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.request.use(config => {\n  const token = store.commonStore.token;\n  if (token) config.headers.Authorization = `Bearer ${token}`\n  return config;\n})\n\n\naxios.interceptors.response.use(async (response) => {\n  if(process.env.NODE_ENV === 'development')await sleep(1000);\n  const pagination = response.headers['pagination'];\n  if (pagination) {\n    response.data = new PaginatedResult(response.data, JSON.parse(pagination));\n    return response as AxiosResponse<PaginatedResult<any>>;\n  }\n    return response;\n}, (error: AxiosError) => {\n  const { data, status, config } = error.response!;\n  switch (status) {\n    case 400:\n      if (typeof data === 'string') toast.error(data);\n      if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\n        history.push('/not-found')\n      }\n      if (data.errors) {\n        const modalStateErrors = Object.values(data.errors);\n        throw modalStateErrors.flat()\n      }\n      break;\n    case 401:\n      toast.error(\"Unauthorized\");\n      break;\n    case 404:\n      history.push('/not-found')\n      break;\n    case 500:\n      store.commonStore.setServerError(data);\n      history.push('/server-error')\n      break;\n  }\n  return Promise.reject(error);\n});\n\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\n\nconst requests = {\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\n  post: <T>(url: string, body: {}) =>\n    axios.post<T>(url, body).then(responseBody),\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\n};\n\nconst Activities = {\n  list: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>(\"/activities\", {params}).then(responseBody),\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\n  create: (activity: ActivityFormValues) => requests.post<void>(\"/activities\", activity),\n  update: (activity: ActivityFormValues) =>\n    requests.put<void>(`/activities/${activity.id}`, activity),\n  delete: (id: string) => requests.del<void>(`/activities/${id}`),\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {})\n};\n\nconst Account = {\n  current: () => requests.get<User>('/account'),\n  login: (user: UserFormValues) => requests.post<User>('/account/login', user),\n  register: (user: UserFormValues) => requests.post<User>('/account/register', user)\n}\nconst Profiles = {\n  selected: (username: string) =>\n    requests.get<Profile>(`/profiles/${username}`),\n  uploadPhoto: (file: Blob) => {\n    let formData = new FormData();\n    formData.append(\"File\", file);\n    return axios.post<Photo>(\"photos\", formData, {\n      headers: { \"Content-type\": \"multipart/form-data\" },\n    });\n  },\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\n  updateProfile: (profile: Partial<Profile>) =>\n    requests.put(\"/profiles\", profile),\n  toggleFollow: (username: string) => requests.post(`/follow/${username}`, {}),\n  listFollowing: (username: string, predicate: string) =>\n    requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\n  listActivites: (username: string, predicate: string) =>\n    requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`),\n};\n\nconst agent = {\n  Activities,\n  Account,\n  Profiles\n};\n\nexport default agent;\n","import { Profile } from \"./profile\";\n\nexport interface Activity {\n  id: string;\n  title: string;\n  date: Date | null;\n  description: string;\n  category: string;\n  city: string;\n  venue: string;\n  hostUsername: string;\n  isCancelled: boolean;\n  isGoing: boolean;\n  isHost: boolean;\n  host?: Profile;\n  attendees: Profile[];\n}\n\nexport class Activity implements Activity {\n  constructor(init?: ActivityFormValues) {\n    Object.assign(this, init)\n  }\n}\n\nexport class ActivityFormValues {\n  id?: string = '';\n  title: string = \"\";\n  category: string = \"\";\n  description: string = \"\";\n  date: Date | null = null;\n  city: string = \"\";\n  venue: string = \"\";\n\n  constructor(activity?: ActivityFormValues) {\n    if (activity) {\n      this.id = activity.id;\n      this.title = activity.title;\n      this.category = activity.category;\n      this.description = activity.description;\n      this.date = activity.date;\n      this.city = activity.city;\n      this.venue = activity.venue;\n    }\n  }\n}\n","import { User } from \"./user\";\n\nexport interface Profile {\n    username: string;\n    displayName: string;\n    image?: string;\n    bio?: string;\n    followersCount: number;\n    followingCount: number;\n    following: boolean;\n    photos?: Photo[];\n}\n\nexport class Profile implements Profile {\n    constructor(user: User) {\n        this.username = user.username;\n        this.displayName = user.displayName;\n        this.image = user.image;\n    }\n}\n\nexport interface Photo {\n    id: string;\n    url: string;\n    isMain: boolean;\n}\n\nexport interface UserActivity {\n    id: string;\n    title: string;\n    category: string;\n    date: Date;\n}","import { format } from \"date-fns\";\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Activity, ActivityFormValues } from \"../models/actvity\";\nimport { Pagination, PagingParams } from \"../models/pagination\";\nimport { Profile } from \"../models/profile\";\nimport { store } from \"./store\";\n\nexport default class ActivityStore {\n  activityRegistry = new Map<string, Activity>();\n  selectedActivity: Activity | undefined = undefined;\n  editMode = false;\n  loading = false;\n  loadingInitial = false;\n  pagination: Pagination | null = null;\n  pagingParams = new PagingParams();\n  predicate = new Map().set('all', true)\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.predicate.keys(),\n      () => {\n        this.pagingParams = new PagingParams();\n        this.activityRegistry.clear();\n        this.loadActivities();\n      }\n    )\n  }\n\n  setPagingParams = (pagingParams: PagingParams) => {\n    this.pagingParams = pagingParams;\n  };\n\n  setPredicate = (predicate: string, value: string | Date) => {\n    const resetPredicate = () => {\n      this.predicate.forEach((value, key) => {\n        if (key !== 'startDate') this.predicate.delete(key)\n      })\n    }\n    switch (predicate) {\n      case \"all\":\n        resetPredicate();\n        this.predicate.set(\"all\", true);\n        break;\n      case \"isGoing\":\n        resetPredicate();\n        this.predicate.set(\"isGoing\", true);\n        break;\n      case \"isHost\":\n        resetPredicate();\n        this.predicate.set(\"isHost\", true);\n        break;\n      case 'startDate':\n        this.predicate.delete(\"startDate\");\n        this.predicate.set('startDate', value)\n        break;\n    }\n  }\n\n  get axiosParams() {\n    const params = new URLSearchParams();\n    params.append(\"pageNumber\", this.pagingParams.pageNumber.toString());\n    params.append(\"pageSize\", this.pagingParams.pageSize.toString());\n    this.predicate.forEach((value, key) => {\n      if (key === 'startDate') {\n        params.append(key, (value as Date).toISOString())\n      } else {\n        params.append(key, value)\n      }\n    })\n    return params;\n  }\n\n  get activitiesByDate() {\n    return Array.from(this.activityRegistry.values()).sort(\n      (a, b) => a.date!.getTime() - b.date!.getTime()\n    );\n  }\n\n  get groupedActivities() {\n    return Object.entries(\n      this.activitiesByDate.reduce((activities, activity) => {\n        const date = format(activity.date!, \"dd MMM yyyy\");\n        activities[date] = activities[date]\n          ? [...activities[date], activity]\n          : [activity];\n        return activities;\n      }, {} as { [key: string]: Activity[] })\n    );\n  }\n\n  loadActivities = async () => {\n    this.setLoadingInitial(true);\n    try {\n      let result = await agent.Activities.list(this.axiosParams);\n      result.data.forEach((activity) => {\n        this.setActivity(activity);\n      });\n      this.setPagination(result.pagination);\n      this.setLoadingInitial(false);\n    } catch (error) {\n      console.log(error);\n\n      this.setLoadingInitial(false);\n    }\n  };\n\n  setPagination = (pagination: Pagination) => {\n    this.pagination = pagination;\n  };\n\n  loadActivity = async (id: string) => {\n    let activity = this.getActivity(id);\n    if (activity) {\n      this.selectedActivity = activity;\n      return activity;\n    } else {\n      this.loadingInitial = true;\n      try {\n        activity = await agent.Activities.details(id);\n        this.setActivity(activity);\n        runInAction(() => {\n          this.selectedActivity = activity;\n        });\n        this.setLoadingInitial(false);\n        return activity;\n      } catch (error) {\n        console.log(error);\n        this.setLoadingInitial(false);\n      }\n    }\n  };\n\n  private setActivity = (activity: Activity) => {\n    const user = store.userStore.user;\n    if (user) {\n      activity.isGoing = activity.attendees!.some(\n        (a) => a.username === user.username\n      );\n      activity.isHost = activity.hostUsername === user.username;\n      activity.host = activity.attendees?.find(\n        (x) => x.username === activity.hostUsername\n      );\n    }\n    activity.date = new Date(activity.date!);\n    this.activityRegistry.set(activity.id, activity);\n  };\n\n  private getActivity = (id: string) => this.activityRegistry.get(id);\n\n  setLoadingInitial = (state: boolean) => {\n    this.loadingInitial = state;\n  };\n\n  createActivity = async (activity: ActivityFormValues) => {\n    const user = store.userStore.user;\n    const attendee = new Profile(user!);\n    try {\n      await agent.Activities.create(activity);\n      const newActivity = new Activity(activity);\n      newActivity.hostUsername = user!.username;\n      newActivity.attendees = [attendee];\n      this.setActivity(newActivity);\n      runInAction(() => {\n        this.selectedActivity = newActivity;\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  updateActivity = async (activity: ActivityFormValues) => {\n    try {\n      await agent.Activities.update(activity);\n      runInAction(() => {\n        if (activity.id) {\n          let updatedActivity = {\n            ...this.getActivity(activity.id),\n            ...activity,\n          };\n          this.activityRegistry.set(activity.id, updatedActivity as Activity);\n          this.selectedActivity = updatedActivity as Activity;\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  deleteActivity = async (id: string) => {\n    this.loading = true;\n    try {\n      await agent.Activities.delete(id);\n      runInAction(() => {\n        this.activityRegistry.delete(id);\n        this.loading = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => (this.loading = false));\n    }\n  };\n  updateAttendance = async () => {\n    const user = store.userStore.user;\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        if (this.selectedActivity?.isGoing) {\n          this.selectedActivity.attendees =\n            this.selectedActivity.attendees?.filter(\n              (a) => a.username !== user?.username\n            );\n          this.selectedActivity.isGoing = false;\n        } else {\n          const attendee = new Profile(user!);\n          this.selectedActivity?.attendees?.push(attendee);\n          this.selectedActivity!.isGoing = true;\n        }\n        this.activityRegistry.set(\n          this.selectedActivity!.id,\n          this.selectedActivity!\n        );\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.loading = false));\n    }\n  };\n  cancelActivityToggle = async () => {\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        this.selectedActivity!.isCancelled =\n          !this.selectedActivity?.isCancelled;\n        this.activityRegistry.set(\n          this.selectedActivity!.id,\n          this.selectedActivity!\n        );\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  clearSelectedActivity = () => {\n    this.selectedActivity = undefined;\n  };\n  updateAttendeeDisplayName = (username: string, update: Partial<Profile>) => {\n    this.activityRegistry.forEach((activity) => {\n      if (activity.hostUsername === username)\n        activity.host!.displayName = update.displayName!;\n      activity.attendees.forEach((attendee) => {\n        if (attendee.username === username) {\n          attendee.displayName = update.displayName!;\n          attendee.bio = update.bio;\n        }\n      });\n    });\n  };\n  updateAttendeeImage = (username: string, update: string) => {\n    this.activityRegistry.forEach((activity) => {\n      if (activity.hostUsername === username)\n        activity.host!.image = update;\n      activity.attendees.forEach((attendee) => {\n        if (attendee.username === username) {\n          attendee.image = update;\n        }\n      });\n    });\n  };\n\n  updateAttendeeFollowing = (username: string) => {\n    this.activityRegistry.forEach((activity) => {\n      activity.attendees.forEach((attendee) => {\n        if (attendee.username === username) {\n          attendee.following\n            ? attendee.followersCount--\n            : attendee.followersCount++;\n          attendee.following = !attendee.following;\n        }\n      });\n    });\n  };\n}\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\nimport { store } from \"./store\";\n\nexport default class ProfileStore {\n  profile: Profile | null = null;\n  loadingProfile: boolean = false;\n  uploading: boolean = false;\n  loading: boolean = false;\n  followings: Profile[] = [];\n  loadingFollow: boolean = false;\n  activeTab: number = 0;\n  userActivites: UserActivity[] = [];\n  loadingActivities: boolean = false;\n  activityTab: number = 4;\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.activeTab,\n      (activeTab) => {\n        if (activeTab === 3 || activeTab === 4) {\n          const predicate = activeTab === 3 ? \"followers\" : \"following\";\n          this.loadFollowings(predicate);\n        } else if (activeTab === 2){\n          this.activityTab = 0;\n        }else {\n          this.followings = [];\n          this.activityTab = 4;\n        }\n      },\n    );\n    reaction(\n      () => this.activityTab,\n      (activityTab) => {\n        switch (activityTab) {\n          case 0:\n            this.loadUserActivities(\n              store.profileStore.profile!.username,\n              \"future\"\n            );\n            break;\n          case 1:\n            this.loadUserActivities(\n              store.profileStore.profile!.username,\n              \"past\"\n            );\n            break;\n          case 2:\n            this.loadUserActivities(\n              store.profileStore.profile!.username,\n              \"hosting\"\n            );\n            break;\n        }\n      }\n    )\n  }\n  setActivityTab = (activityTab: number) => {\n    this.activityTab = activityTab;\n  }\n\n  setActiveTab = (activeTab: number) => {\n    this.activeTab = activeTab;\n  };\n\n  get isCurrentUser() {\n    if (store.userStore.user && this.profile)\n      return store.userStore.user.username === this.profile.username;\n    else return false;\n  }\n  resetProfile = () => {\n    this.profile = null;\n  };\n\n  loadProfile = async (username: string) => {\n    this.loadingProfile = true;\n    try {\n      const profile = await agent.Profiles.selected(username);\n      runInAction(() => {\n        this.profile = profile;\n        this.loadingProfile = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => (this.loadingProfile = false));\n    }\n  };\n  uploadPhoto = async (file: Blob) => {\n    this.uploading = true;\n    try {\n      const response = await agent.Profiles.uploadPhoto(file);\n      const photo = response.data;\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.photos?.push(photo);\n          if (photo.isMain && store.userStore.user) {\n            store.userStore.setImage(photo.url);\n            this.profile.image = photo.url;\n          }\n        }\n        this.uploading = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => (this.uploading = false));\n    }\n  };\n\n  setMainPhoto = async (photo: Photo) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.setMainPhoto(photo.id);\n      store.userStore.setImage(photo.url);\n      store.activityStore.updateAttendeeImage(this.profile!.username, photo.url)\n      runInAction(() => {\n        if (this.profile && this.profile.photos) {\n          this.profile.photos.find((p) => p.isMain)!.isMain = false;\n          this.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\n          this.profile.image = photo.url;\n          this.loading = false;\n        }\n      });\n    } catch (error) {\n      runInAction(() => (this.loading = false));\n      console.log(error);\n    }\n  };\n  deletePhoto = async (photo: Photo) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.deletePhoto(photo.id);\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.photos = this.profile.photos?.filter(\n            (p) => p.id !== photo.id\n          );\n          this.loading = false;\n        }\n      });\n    } catch (error) {\n      runInAction(() => (this.loading = false));\n      console.log(error);\n    }\n  };\n  updateProfile = async (profile: Partial<Profile>) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.updateProfile(profile);\n      store.activityStore.updateAttendeeDisplayName(this.profile!.username, profile )\n      runInAction(() => {\n        if (\n          profile.displayName &&\n          profile.displayName !== store.userStore.user?.displayName\n        ) {\n          store.userStore.setDisplayName(profile.displayName);\n        }\n        this.profile = { ...this.profile, ...(profile as Profile) };\n        this.loading = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  toggleFollow = async (username: string, following: boolean) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.toggleFollow(username);\n      store.activityStore.updateAttendeeFollowing(username);\n      runInAction(() => {\n        if (\n          this.profile &&\n          this.profile.username !== store.userStore.user?.username &&\n          this.profile.username === username\n        ) {\n          following\n            ? this.profile.followersCount++\n            : this.profile.followersCount--;\n          this.profile.following = !this.profile.following;\n        }\n        if (this.profile && this.profile.username === store.userStore.user?.username) {\n          following\n            ? this.profile.followingCount++\n            : this.profile.followingCount--;\n        }\n        this.followings.forEach((profile) => {\n          if (profile.username === username) {\n            profile.following\n              ? profile.followersCount--\n              : profile.followersCount++;\n            profile.following = !profile.following;\n          }\n        });\n        this.loading = false;\n      });\n    } catch (error) {\n      runInAction(() => {\n        console.log(error);\n        this.loading = false;\n      });\n    }\n  };\n\n  loadFollowings = async (predicate: string) => {\n    this.loadingFollow = true;\n    try {\n      const followings = await agent.Profiles.listFollowing(\n        this.profile!.username,\n        predicate\n      );\n      runInAction(() => {\n        this.followings = followings;\n        this.loadingFollow = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loadingFollow = false;\n      });\n    }\n  };\n\n  loadUserActivities = async (username: string, predicate: string) => {\n    this.loadingActivities = true;\n    try {\n      const activities = await agent.Profiles.listActivites(username, predicate!);\n      runInAction(() => {\n        this.userActivites = activities;\n        this.loadingActivities = false;\n      })\n    } catch (error) {\n      console.log(error)\n      runInAction(() => {\n        this.loadingActivities = false;\n      })\n    }\n  }\n}\n","import { makeAutoObservable, runInAction } from \"mobx\";\nimport { history } from \"../..\";\nimport agent from \"../api/agent\";\nimport { User, UserFormValues } from \"../models/user\";\nimport { store } from \"./store\";\n\nexport default class UserStore {\n  user: User | null = null;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  get isLoggedIn() {\n    return !!this.user;\n  }\n\n  login = async (creds: UserFormValues) => {\n    try {\n      const user = await agent.Account.login(creds);\n      store.commonStore.setToken(user.token);\n      runInAction(() => (this.user = user));\n      history.push(\"/activities\");\n      store.modalStore.closeModal();\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  logout = () => {\n    store.commonStore.setToken(null);\n    window.localStorage.removeItem(\"jwt\");\n    this.user = null;\n    store.profileStore.resetProfile();\n    history.push(\"/\");\n  };\n\n  getUser = async () => {\n    try {\n      const user = await agent.Account.current();\n      runInAction(() => (this.user = user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  register = async (creds: UserFormValues) => {\n    try {\n      const user = await agent.Account.register(creds);\n      store.commonStore.setToken(user.token);\n      runInAction(() => (this.user = user));\n      history.push(\"/activities\");\n      store.modalStore.closeModal();\n    } catch (error) {\n      throw error;\n    }\n  };\n  setImage = (image: string) => {\n      if (this.user) this.user.image = image\n  }\n  setDisplayName = (name: string) => {\n    if (this.user) this.user.displayName = name;\n  }\n}\n","import { createContext, useContext } from 'react'\nimport ActivityStore from './activityStore'\nimport CommentStore from './commentStore';\nimport CommonStore from './commonStore';\nimport ModalStore from './modalStore';\nimport ProfileStore from './profileStore';\nimport UserStore from './userStore';\n\ninterface Store {\n    activityStore: ActivityStore;\n    commonStore: CommonStore;\n    userStore: UserStore;\n    modalStore: ModalStore;\n    profileStore: ProfileStore;\n    commentStore: CommentStore;\n}\n\nexport const store: Store = {\n    activityStore: new ActivityStore(),\n    commonStore: new CommonStore(),\n    userStore: new UserStore(),\n    modalStore: new ModalStore(),\n    profileStore: new ProfileStore(),\n    commentStore: new CommentStore()\n}\n\nexport const StoreContext = createContext(store);\n\nexport function useStore() {\n    return useContext(StoreContext);\n}","import { makeAutoObservable, reaction } from \"mobx\";\nimport { ServerError } from \"../models/serverError\";\n\nexport default class CommonStore {\n  error: ServerError | null = null;\n  token: string | null = window.localStorage.getItem(\"jwt\");\n  appLoaded: boolean = false;\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.token,\n      (token) => {\n        if (token) {\n          window.localStorage.setItem(\"jwt\", token);\n        } else {\n          window.localStorage.removeItem(\"jwt\");\n        }\n      }\n    );\n  }\n\n  setServerError = (error: ServerError) => {\n    this.error = error;\n  };\n\n  setToken = (token: string | null) => {\n    this.token = token;\n  };\n  setAppLoaded = () => {\n    this.appLoaded = true;\n  };\n}\n","import { makeAutoObservable } from \"mobx\"\n\ninterface Modal {\n    open: boolean;\n    body: JSX.Element | null\n}\n\nexport default class ModalStore {\n  modal: Modal = {\n    open: false,\n    body: null,\n  };\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  openModal = (content: JSX.Element) => {\n    this.modal.open = true;\n    this.modal.body = content;\n  };\n  closeModal = () => {\n    this.modal.open = false;\n    this.modal.body = null;\n  };\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\"\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\n\r\nexport default class CommentStore {\r\n    comments: ChatComment[] = [];\r\n    hubConnection: HubConnection | null = null\r\n\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    createHubConnection = (activityId: string) => {\r\n        if (store.activityStore.selectedActivity) {\r\n            this.hubConnection = new HubConnectionBuilder()\r\n                .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\r\n                    accessTokenFactory: () => store.userStore.user?.token!\r\n                })\r\n                .withAutomaticReconnect()\r\n                .configureLogging(LogLevel.Information)\r\n                .build();\r\n            \r\n            this.hubConnection.start().catch(error => console.log('Error establishing the connection: ', error))\r\n        \r\n            this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\r\n                runInAction(() => {\r\n                    comments.forEach((comment) => {\r\n                      comment.createdAt = new Date(comment.createdAt + 'Z');\r\n                    });\r\n                    this.comments = comments\r\n                });\r\n            })\r\n\r\n            this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\r\n                runInAction(() => {\r\n                    comment.createdAt = new Date(comment.createdAt)\r\n                    this.comments.unshift(comment)\r\n                });\r\n            })\r\n        }\r\n    }\r\n    stopHubConnection = () => {\r\n        this.hubConnection?.stop().catch(error => console.log('Error stopping connection', error))\r\n    }\r\n\r\n    clearComments = () => {\r\n        this.comments = [];\r\n        this.stopHubConnection();\r\n    }\r\n\r\n    addComment = async (values: any) => {\r\n        values.activityId = store.activityStore.selectedActivity?.id;\r\n        try {\r\n            await this.hubConnection?.invoke('SendComment', values);\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { Button, Container, Menu, Image, Dropdown } from \"semantic-ui-react\";\nimport { useStore } from \"../stores/store\";\n\nconst NavBar = () => {\n  const {userStore: {user, logout}} = useStore();\n  return (\n    <Menu inverted fixed=\"top\" >\n      <Container>\n        <Menu.Item as={NavLink} to=\"/\" exact header>\n          <img\n            src=\"/assets/logo.png\"\n            alt=\"logo\"\n            style={{ marginRight: \"10px\" }}\n          />\n          Reactivities\n        </Menu.Item>\n        <Menu.Item as={NavLink} to=\"/activities\" name=\"Activities\" />\n        <Menu.Item as={NavLink} to=\"errors\" name=\"Errors\" />\n        <Menu.Item>\n          <Button\n            positive\n            content=\"Create Activity\"\n            as={NavLink}\n            to=\"/createActivity\"\n          />\n        </Menu.Item>\n        <Menu.Item position=\"right\">\n          <Image src={user?.image || \"assets/user.png\"} avatar spaced=\"right\" />\n          <Dropdown pointing=\"top left\" text={user?.displayName}>\n            <Dropdown.Menu>\n              <Dropdown.Item\n                as={Link}\n                to={`/profiles/${user?.username}`}\n                text=\"My Profile\"\n                icon=\"user\"\n              />\n              <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\n            </Dropdown.Menu>\n          </Dropdown>\n        </Menu.Item>\n      </Container>\n    </Menu>\n  );\n};\n\nexport default observer(NavBar);\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport Calendar from \"react-calendar\";\nimport { Header, Menu } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\n\nconst ActivityFilters = () => {\n  const {\n    activityStore: { predicate, setPredicate },\n  } = useStore();\n\n  return (\n    <>\n      <Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 42 }}>\n        <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\n        <Menu.Item\n          content=\"All Activities\"\n          active={predicate.has(\"all\")}\n          onClick={() => setPredicate(\"all\", \"true\")}\n        />\n        <Menu.Item\n          content=\"I'm going\"\n          active={predicate.has(\"isGoing\")}\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\n        />\n        <Menu.Item\n          content=\"I'm hosting\"\n          active={predicate.has(\"isHost\")}\n          onClick={() => setPredicate(\"isHost\", \"true\")}\n        />\n      </Menu>\n      <Header />\n      <Calendar\n        className=\"react-calendar\"\n        onChange={(date) => setPredicate(\"startDate\", date as Date)}\n        value={predicate.get(\"startDate\") || new Date()}\n      />\n    </>\n  );\n};\n\nexport default observer(ActivityFilters);\n","import { observer } from 'mobx-react-lite';\r\nimport React, { SyntheticEvent } from 'react'\r\nimport { Button, Reveal } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nconst FollowButton = ({ profile }: Props) => {\r\n    const { profileStore, userStore } = useStore();\r\n    const { toggleFollow, loading } = profileStore;\r\n\r\n    if (userStore.user?.username === profile.username) return null;\r\n\r\n    const followHandler = (event: SyntheticEvent, username: string) => {\r\n        event.preventDefault();\r\n        profile.following ? toggleFollow(username, false) : toggleFollow(username, true);\r\n    }\r\n\r\n\r\n    return (\r\n      <Reveal animated=\"move\">\r\n        <Reveal.Content visible style={{ width: \"100%\" }}>\r\n          <Button\r\n            fluid\r\n            color=\"teal\"\r\n            content={\r\n              profile.following ? \"Following\" : \"Not Following\"\r\n            }\r\n          />\r\n        </Reveal.Content>\r\n        <Reveal.Content hidden style={{ width: \"100%\" }}>\r\n          <Button\r\n            fluid\r\n            basic\r\n            color={profile.following ? \"red\" : \"green\"}\r\n            loading={loading}\r\n            content={profile.following ? \"Unfollow\" : \"Follow\"}\r\n            onClick={(event) => followHandler(event, profile.username)}\r\n          />\r\n        </Reveal.Content>\r\n      </Reveal>\r\n    );\r\n}\r\n\r\nexport default observer(FollowButton);","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Icon, Image } from 'semantic-ui-react';\nimport { Profile } from '../../app/models/profile';\nimport FollowButton from './FollowButton';\n\ninterface Props {\n    profile: Profile;\n}\n\nconst ProfileCard = ({ profile }: Props) => {\n    const truncate = (bio: string | undefined) => {\n        if (bio) {\n            return bio.length > 40 ? bio.substring(0, 37) + '...' : bio;\n        }\n    }\n\n    return (\n        <Card as={Link} to={`/profiles/${profile.username}`}>\n            <Image src={profile.image || '/assets/user.png'} />\n            <Card.Content>\n                <Card.Header>{profile.displayName}</Card.Header>\n                <Card.Description>{truncate(profile.bio)}</Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n                <Icon name='user' />\n                {profile.followersCount} {profile.followersCount === 1 ? 'follower' : 'followers'}\n            </Card.Content>\n            <FollowButton profile={profile}/>\n        </Card>\n    )\n}\n\nexport default observer(ProfileCard);","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { List, Image, Popup } from \"semantic-ui-react\";\nimport { Profile } from \"../../../app/models/profile\";\nimport ProfileCard from \"../../Profiles/ProfileCard\";\n\ninterface Props {\n  attendees: Profile[];\n}\n\nconst ActivityListItemAttendee = ({ attendees }: Props) => {\n  const styles = {\n    borderColor: 'orange',\n    borderWidth: 2\n  }\n  return (\n    <List horizontal>\n      {attendees.map((attendee) => (\n          <Popup\n            hoverable\n            key={attendee.username}\n            trigger={\n              <List.Item\n                key={attendee.username}\n                as={Link}\n                to={`/profiles/${attendee.username}`}\n              >\n                <Image\n                  size=\"mini\"\n                  circular\n                  bordered\n                  style={attendee.following ? styles : null}\n                  src={attendee.image || \"/assets/user.png\"}\n                />\n              </List.Item>\n            }\n          >\n            <Popup.Content>\n            <ProfileCard profile={attendee}/>\n            </Popup.Content>\n          </Popup>\n      ))}\n    </List>\n  );\n};\n\nexport default observer(ActivityListItemAttendee);\n","import { format } from \"date-fns\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Accordion, Button, Icon, Item, Label, Segment,  } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/actvity\";\nimport ActivityListIemAttendee from \"./ActivityListIemAttendee\";\n\ninterface Props {\n  activity: Activity;\n}\n\nconst ActivityListItem = ({ activity }: Props) => {\n  const [index] = useState<number>(0);\n  const [activeIndex, setActiveIndex] = useState<boolean>(false)\n\n  const accordianHandle = () => {\n    setActiveIndex(prevState => !prevState)\n  }\n  return (\n    <Segment.Group>\n      <Segment>\n        {activity.isCancelled && (\n          <Label\n            attached=\"top\"\n            color=\"red\"\n            content=\"Cancelled\"\n            style={{ textAlign: \"center\" }}\n          />\n        )}\n        <Item.Group>\n          <Item>\n            <Item.Image\n              style={{ marginBottom: 3 }}\n              size=\"tiny\"\n              src={activity.host?.image || \"/assets/user.png\"}\n            />\n            <Item.Content>\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\n                {activity.title}\n              </Item.Header>\n              <Item.Description>\n                Hosted by{\" \"}\n                <Link to={`/profiles/${activity.host!.username}`}>\n                  {activity.host?.displayName}\n                </Link>\n              </Item.Description>\n              {activity.isHost && (\n                <Item.Description>\n                  <Label basic color=\"orange\">\n                    You are hosting this activity\n                  </Label>\n                </Item.Description>\n              )}\n              {activity.isGoing && !activity.isHost && (\n                <Item.Description>\n                  <Label basic color=\"green\">\n                    You are going to this activity\n                  </Label>\n                </Item.Description>\n              )}\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      <Segment>\n        <span>\n          <Icon name=\"clock\" /> {format(activity.date!, \"dd MMM yyyy h:mm aa\")}\n          <Icon name=\"marker\" /> {activity.venue}\n        </span>\n      </Segment>\n      <Accordion>\n        <Accordion.Title\n          active={activeIndex}\n          index={index}\n          onClick={accordianHandle}\n        >\n          <Icon name=\"address card\" />\n          <span>People going: {activity.attendees.length}</span>\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex}>\n          <Segment secondary>\n            <ActivityListIemAttendee attendees={activity.attendees!} />\n          </Segment>\n        </Accordion.Content>\n      </Accordion>\n      <Segment clearing>\n        <span>{activity.description}</span>\n        <Button\n          as={Link}\n          to={`/activities/${activity.id}`}\n          color=\"teal\"\n          floated=\"right\"\n          content=\"View\"\n        />\n      </Segment>\n    </Segment.Group>\n  );\n};\n\nexport default observer(ActivityListItem);\n","import { observer } from \"mobx-react-lite\";\nimport React, { Fragment } from \"react\";\n\nimport { Header} from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityListItem from \"./AcivityListItem\";\n\n\nconst ActivityList = () => {\n  const { activityStore } = useStore();\n  const { groupedActivities } = activityStore;\n\n  return (\n    <>\n      {groupedActivities.map(([group, activities]) => (\n        <Fragment key={group}>\n          <Header sub color=\"teal\">\n            {group}\n          </Header>\n          {activities.map((activity) => (\n            <ActivityListItem key={activity.id} activity={activity} />\n          ))}\n        </Fragment>\n      ))}\n    </>\n  );\n};\n\nexport default observer(ActivityList);\n","import { Button, Placeholder, Segment } from \"semantic-ui-react\"\r\n\r\ninterface Props {\r\n    margin: number\r\n}\r\n\r\nconst ActivityListItemPlaceHolder = ({margin} : Props) => {\r\n    return <>\r\n        <Placeholder fluid style={{ marginTop: margin }} />\r\n        <Segment.Group>\r\n            <Segment style={{ minHeight: 110 }}>\r\n                <Placeholder>\r\n                    <Placeholder.Header image>\r\n                        <Placeholder.Line/>\r\n                        <Placeholder.Line/>\r\n                    </Placeholder.Header>\r\n                    <Placeholder.Paragraph>\r\n                        <Placeholder.Line />\r\n                    </Placeholder.Paragraph>\r\n                </Placeholder>\r\n            </Segment>\r\n            <Segment>\r\n                <Placeholder>\r\n                    <Placeholder.Line />\r\n                </Placeholder>\r\n            </Segment>\r\n            <Segment secondary style={{ minHeight: 30 }} />\r\n            <Segment clearing>\r\n                <Button disabled color='blue' floated='right' content='View'/>\r\n            </Segment>\r\n        </Segment.Group>\r\n    </>\r\n}\r\n\r\nexport default ActivityListItemPlaceHolder;\r\n","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect, useRef, useState} from \"react\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport {  Grid, Loader, Rail, Ref, Segment, Sticky } from \"semantic-ui-react\";\nimport { PagingParams } from \"../../../app/models/pagination\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityFilters from \"./ActivityFilters\";\nimport ActivityList from \"./ActivityList\";\nimport ActivityListItemPlaceHolder from \"./ActivityListItemPlaceHolder\";\n\nconst ActivityDashboard = () => {\n  const contextRef = useRef<any>();\n  const { activityStore } = useStore();\n  const { loadActivities, activityRegistry, setPagingParams, pagination } = activityStore;\n  const [loadingNext, setLoadingNext] = useState<boolean>(false);\n  \n  useEffect(() => {\n    if(activityRegistry.size <= 1) loadActivities();\n  }, [loadActivities, activityRegistry.size]);\n\n  \n  const getNextHandler = () => {\n    setLoadingNext(true)\n    setPagingParams(new PagingParams(pagination!.currentPage + 1))\n    loadActivities().then(() => setLoadingNext(false));\n  }\n  \n\n  \n  return (\n    <Grid>\n      <Grid.Column width=\"10\">\n        <Ref innerRef={contextRef}>\n          <Segment basic>\n            {activityStore.loadingInitial && !loadingNext ? (\n              <>\n                <ActivityListItemPlaceHolder margin={14}/>\n                <ActivityListItemPlaceHolder margin={45}/>\n                <ActivityListItemPlaceHolder margin={45}/>\n                </>\n            ) : (\n            <InfiniteScroll\n              pageStart={0}\n              loadMore={getNextHandler}\n              hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages}\n              initialLoad={false}\n            >\n            <ActivityList />\n            </InfiniteScroll>\n                \n            )}\n\n            <Rail position=\"right\">\n              <Sticky\n                context={contextRef}\n                offset={42}\n                styleElement={{ zIndex: 0 }}\n              >\n                <ActivityFilters/>\n              </Sticky>\n            </Rail>\n          </Segment>\n        </Ref>\n      </Grid.Column>\n      <Grid.Column width={10}>\n        <Loader active={loadingNext}/>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default observer(ActivityDashboard);\n","import { useField } from 'formik';\nimport React from 'react';\nimport { Form, Label } from 'semantic-ui-react';\n\ninterface Props {\n    placeholder: string;\n    name: string;\n    label?: string;\n    type?: string\n}\n\nconst MyTextInput = (props: Props) => {\n    const [field, meta] = useField(props.name);\n    return (\n        <Form.Field error={meta.touched && !!meta.error}>\n            <label>{props.label}</label>\n            <input {...field} {...props} />\n            {meta.touched && meta.error ? (\n                <Label basic color='red'> {meta.error}</Label>\n            ) : null}\n        </Form.Field>\n    )\n}\n\nexport default MyTextInput;","import { ErrorMessage, Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Button, Header, Label } from \"semantic-ui-react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\n\nconst LoginForm = () => {\n  const { userStore } = useStore();\n  return (\n    <Formik\n      initialValues={{ email: \"\", password: \"\", error: null }}\n      onSubmit={(values, { setErrors }) =>\n        userStore\n          .login(values)\n          .catch((error) => setErrors({ error: \"Invalid Email or Password\" }))\n      }\n    >\n      {({ handleSubmit, isSubmitting, errors }) => (\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoCapitalize=\"off\">\n          <Header as='h2' content='Login to Reactivities' color='blue' textAlign='center'/>\n          <MyTextInput name=\"email\" placeholder=\"Email\" type=\"email\" />\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\n          <ErrorMessage\n            name=\"error\"\n            render={() => (\n              <Label\n                style={{ marginBottom: 10 }}\n                basic\n                color=\"red\"\n                content={errors.error}\n              />\n            )}\n          />\n          <Button\n            loading={isSubmitting}\n            positive\n            content=\"Login\"\n            type=\"submit\"\n            fluid\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default observer(LoginForm);\n","import React from 'react';\nimport { Message } from 'semantic-ui-react';\n\ninterface Props {\n    errors: any;\n}\n\nconst ValidationErrors = ({errors} : Props) => {\n    return (\n        <Message error>\n            {errors && (\n                <Message.List>\n                    {errors.map((err: any, key: any) => (\n                        <Message.Item key={key}>{err}</Message.Item>\n                    ))}\n                </Message.List>\n            )}\n        </Message>\n    );\n}\n\n\n\nexport default ValidationErrors;","import { ErrorMessage, Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Button, Header } from \"semantic-ui-react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\nimport * as Yup from \"yup\";\nimport ValidationErrors from \"../errors/ValidationErrors\";\n\nconst RegisterForm = () => {\n  const { userStore } = useStore();\n  return (\n    <Formik\n      initialValues={{\n        displayName: \"\",\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        error: null,\n      }}\n      onSubmit={(values, { setErrors }) =>\n        userStore\n          .register(values)\n          .catch((error) => setErrors({error}))\n      }\n      validationSchema={Yup.object({\n        displayName: Yup.string().required(),\n        username: Yup.string().required(),\n        email: Yup.string().required().email(),\n        password: Yup.string().required(),\n        confirmPassword: Yup.string().test(\n          \"passwords-match\",\n          \"Passwords must match\",\n          function (value) {\n            return this.parent.password === value;\n          }\n        ),\n      })}\n    >\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\n        <Form className=\"ui form error\" onSubmit={handleSubmit} autoCapitalize=\"off\">\n          <Header\n            as=\"h2\"\n            content=\"Register to Reactivities\"\n            color=\"blue\"\n            textAlign=\"center\"\n          />\n          <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\n          <MyTextInput name=\"username\" placeholder=\"Username\" />\n          <MyTextInput name=\"email\" placeholder=\"Email\" type=\"email\" />\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\n          <MyTextInput name=\"confirmPassword\" placeholder=\"Confirm Password\" type=\"password\" />\n          <ErrorMessage\n            name=\"error\"\n            render={() => (\n                <ValidationErrors errors={errors.error}/>\n            )}\n          />\n          <Button\n            disabled={!isValid || !dirty || isSubmitting}\n            loading={isSubmitting}\n            positive\n            content=\"Sign Up!\"\n            type=\"submit\"\n            fluid\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default observer(RegisterForm);\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Header, Segment, Image, Button } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\nimport LoginForm from \"../users/LoginForm\";\nimport RegisterForm from \"../users/RegisterForm\";\n\nconst HomePage = () => {\n  const { userStore, modalStore } = useStore();\n\n  return (\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\n      <Container text>\n        <Header as=\"h1\" inverted>\n          <Image\n            size=\"massive\"\n            src=\"/assets/logo.png\"\n            alt=\"logo\"\n            style={{ marginBottom: 12 }}\n          />\n          Reactivities\n        </Header>\n        {userStore.isLoggedIn ? (\n          <>\n            <Header as=\"h2\" inverted content=\"Welcome to Reactivities\"></Header>\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\n              Go to activities\n            </Button>\n          </>\n        ) : (\n          <>\n            <Button\n              onClick={() => modalStore.openModal(<LoginForm />)}\n              size=\"huge\"\n              inverted\n            >\n              Login\n            </Button>\n            <Button\n              onClick={() => modalStore.openModal(<RegisterForm/>)}\n              size=\"huge\"\n              inverted\n            >\n              Register\n            </Button>\n          </>\n        )}\n      </Container>\n    </Segment>\n  );\n};\n\nexport default observer(HomePage);\n","import React from 'react'\nimport { Dimmer, Loader } from 'semantic-ui-react'\n\ninterface Props {\n    inverted?: boolean;\n    content?: string;\n}\n\nexport default function LoadingComponent({ inverted = true, content = \"Loading...\" }: Props) {\n    return (\n        <Dimmer active={true} inverted={inverted}>\n            <Loader content={content}/>\n        </Dimmer>\n    )\n};","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\n\ninterface Props {\n    placeholder: string;\n    name: string;\n    rows: number;\n  label?: string;\n}\n\nconst MyTextArea = (props: Props) => {\n  const [field, meta] = useField(props.name);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <textarea {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {\" \"}\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n};\n\nexport default MyTextArea;\n","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label, Select } from \"semantic-ui-react\";\n\ninterface Props {\n  placeholder: string;\n    name: string;\n    options: any;\n  label?: string;\n}\n\nconst MySelectInput = (props: Props) => {\n  const [field, meta, helpers] = useField(props.name);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n          <Select\n              clearable\n              options={props.options}\n              value={field.value || null}\n              onChange={(_, data) => helpers.setValue(data.value)}\n              onBlur={() => helpers.setTouched(true)}\n              placeholder={props.placeholder}/>\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {\" \"}\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n};\n\nexport default MySelectInput;\n","export const categoryOptions = [\n  { text: \"Drinks\", value: \"drinks\" },\n  { text: \"Culture\", value: \"culture\" },\n  { text: \"Film\", value: \"film\" },\n  { text: \"Food\", value: \"food\" },\n  { text: \"Music\", value: \"music\" },\n  { text: \"Travel\", value: \"travel\" }\n];","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\n\nconst MyDateInput = (props: Partial<ReactDatePickerProps>) => {\n  const [field, meta, helpers] = useField(props.name!);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <DatePicker\n        {...field}\n        {...props}\n        selected={(field.value && new Date(field.value)) || null}\n        onChange={(value) => helpers.setValue(value)}\n      />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {\" \"}\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n};\n\nexport default MyDateInput;\n","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Header, Segment } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../../app/Layout/LoadingComponent\";\nimport { useStore } from \"../../../app/stores/store\";\nimport { v4 as uuid } from \"uuid\";\nimport { Formik, Form} from \"formik\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\nimport { categoryOptions } from \"../../../app/common/options/CategoryOptions\";\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\nimport { ActivityFormValues } from \"../../../app/models/actvity\";\n\nconst ActivityForm = () => {\n  const { activityStore } = useStore();\n  const {\n    updateActivity,\n    createActivity,\n    loadActivity,\n    loadingInitial,\n  } = activityStore;\n  const { id } = useParams<{ id: string }>();\n  const history = useHistory();\n  const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\n\n  const validationSchema = Yup.object({\n    title: Yup.string().required(\"The activity title is required\"),\n    description: Yup.string().required(\"The activity description is required\"),\n    category: Yup.string().required(),\n    date: Yup.string().required('Date is required').nullable(),\n    venue: Yup.string().required(),\n    city: Yup.string().required(),\n  });\n\n  useEffect(() => {\n    if (id) loadActivity(id).then((activity) => setActivity(new ActivityFormValues(activity)));\n  }, [id, loadActivity]);\n\n  const submitHandler = (activity: ActivityFormValues) => {\n\n    if (!activity.id) {\n      let newActivity = {...activity, id: uuid()}\n      createActivity(newActivity).then(() => history.push(`/activities/${newActivity.id}`));\n    }\n    else updateActivity(activity).then(() =>\n    history.push(`/activities/${activity.id}`)\n    );\n  };\n\n\n  if (loadingInitial) return <LoadingComponent content=\"Loading Activity...\" />;\n\n  return (\n    <Segment clearing>\n      <Header content=\"Activity Details\" color=\"teal\" />\n      <Formik\n        validationSchema={validationSchema}\n        enableReinitialize\n        initialValues={activity}\n        onSubmit={(values) => submitHandler(values)}\n      >\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\n            <MyTextInput name=\"title\" placeholder=\"Title\" />\n            <MyTextArea rows={3} placeholder=\"Description\" name=\"description\" />\n            <MySelectInput\n              options={categoryOptions}\n              name=\"category\"\n              placeholder=\"Category\"\n            />\n            <MyDateInput\n              placeholderText=\"Date\"\n              name=\"date\"\n              showTimeSelect\n              timeCaption=\"time\"\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\n            />\n            <Header content=\"Location Details\" color=\"teal\" />\n            <MyTextInput name=\"city\" placeholder=\"City\" />\n            <MyTextInput name=\"venue\" placeholder=\"Venue\" />\n            <Button.Group floated=\"right\">\n              <Button\n                as={Link}\n                to=\"/activities\"\n                type=\"button\"\n                content=\"Cancel\"\n              />\n              <Button.Or />\n              <Button\n                disabled={isSubmitting || !dirty || !isValid}\n                loading={isSubmitting}\n                positive\n                type=\"submit\"\n                content=\"Submit\"\n              />\n            </Button.Group>\n          </Form>\n        )}\n      </Formik>\n    </Segment>\n  );\n};\n\nexport default observer(ActivityForm);\n","import { Formik, Form, Field, FieldProps } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Segment, Header, Comment, Loader } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\nimport * as Yup from 'yup'\nimport { formatDistanceToNow } from \"date-fns\";\n\ninterface Props {\n  activityId: string;\n}\n\nconst ActivityDetailsChat = ({ activityId }: Props) => {\n  const { commentStore } = useStore();\n\n  useEffect(() => {\n    if (activityId) commentStore.createHubConnection(activityId);\n    return () => {\n      commentStore.clearComments();\n    };\n  }, [commentStore, activityId]);\n\n  const validationSchema = Yup.object({\n    body: Yup.string().required(\"Please add text to the comment\")\n  })\n\n  return (\n    <>\n      <Segment\n        textAlign=\"center\"\n        attached=\"top\"\n        inverted\n        color=\"teal\"\n        style={{ border: \"none\" }}\n      >\n        <Header>Chat about this event</Header>\n      </Segment>\n      <Segment attached clearing>\n        <Formik\n          onSubmit={(values, { resetForm }) =>\n            commentStore.addComment(values).then(() => resetForm())\n          }\n          initialValues={{ body: \"\" }}\n          validationSchema={validationSchema}\n        >\n          {({ isSubmitting, isValid, handleSubmit }) => (\n            <Form className=\"ui form\">\n              <Field name=\"body\">\n                {(props: FieldProps) => (\n                  <div style={{ position: \"relative\" }}>\n                    <Loader active={isSubmitting} />\n                    <textarea\n                      placeholder=\"Hit ENTER to submit, SHIFT ENTER for new line\"\n                      rows={2}\n                      {...props.field}\n                      onKeyPress={(event) => {\n                        if (event.key === \"Enter\" && event.shiftKey) return;\n                        if (event.key === \"Enter\" && !event.shiftKey) {\n                          event.preventDefault();\n                          isValid && handleSubmit();\n                        }\n                      }}\n                    />\n                  </div>\n                )}\n              </Field>\n            </Form>\n          )}\n        </Formik>\n        <Comment.Group>\n          {commentStore.comments.map((comment) => (\n            <Comment key={comment.id}>\n              <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\n              <Comment.Content>\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\n                  {comment.displayName}\n                </Comment.Author>\n                <Comment.Metadata>\n                  <div>{formatDistanceToNow(comment.createdAt)}</div>\n                </Comment.Metadata>\n                <Comment.Text stye={{ whiteSpace: \"pre-wrap\" }}>\n                  {comment.body}\n                </Comment.Text>\n              </Comment.Content>\n            </Comment>\n          ))}\n        </Comment.Group>\n      </Segment>\n    </>\n  );\n};\n\nexport default observer(ActivityDetailsChat);\n","import { format } from \"date-fns\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/actvity\";\nimport { useStore } from \"../../../app/stores/store\";\n\nconst activityImageStyle = {\n  filter: \"brightness(30%)\",\n};\n\nconst activityImageTextStyle = {\n  position: \"absolute\",\n  bottom: \"5%\",\n  left: \"5%\",\n  width: \"100%\",\n  height: \"auto\",\n  color: \"white\",\n};\n\ninterface Props {\n  activity: Activity;\n}\n\nconst ActivityDetailsHeader = ({ activity }: Props) => {\n  const {\n    activityStore: { updateAttendance, loading, cancelActivityToggle },\n  } = useStore();\n  return (\n    <Segment.Group>\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\n        {activity.isCancelled && (\n          <Label\n            style={{ position: \"absolute\", zIndex: 1000, left: -14, top: 20 }}\n            ribbon\n            color=\"red\"\n            content=\"Cancelled\"\n          />\n        )}\n        <Image\n          src={`/assets/categoryImages/${activity.category}.jpg`}\n          fluid\n          style={activityImageStyle}\n        />\n        <Segment style={activityImageTextStyle} basic>\n          <Item.Group>\n            <Item>\n              <Item.Content>\n                <Header\n                  size=\"huge\"\n                  content={activity.title}\n                  style={{ color: \"white\" }}\n                />\n                <p>{format(activity.date!, \"dd MMM yyyy\")}</p>\n                <p>\n                  Hosted by{\" \"}\n                  <strong>\n                    <Link to={`/profiles/${activity.host?.username}`}>\n                      {activity.host?.displayName}\n                    </Link>\n                  </strong>\n                </p>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n      </Segment>\n      <Segment clearing attached=\"bottom\">\n        {activity.isHost ? (\n          <>\n            <Button\n              color={activity.isCancelled ? \"green\" : \"red\"}\n              floated=\"left\"\n              basic\n              content={\n                activity.isCancelled\n                  ? \"Re-activate Activity\"\n                  : \"Cancel Activity\"\n              }\n              onClick={cancelActivityToggle}\n              loading={loading}\n            />\n            <Button\n              disabled={activity.isCancelled}\n              as={Link}\n              to={`/manage/${activity.id}`}\n              size=\"small\"\n              color=\"orange\"\n              floated=\"right\"\n            >\n              Manage Event\n            </Button>\n          </>\n        ) : (\n          <Button\n            disabled={activity.isCancelled}\n            loading={loading}\n            basic\n            color={activity.isGoing ? \"red\" : \"green\"}\n            onClick={updateAttendance}\n            size=\"small\"\n          >\n            {activity.isGoing ? \"Cancel Attendance\" : \"Join Activity\"}\n          </Button>\n        )}\n      </Segment>\n    </Segment.Group>\n  );\n};\n\nexport default observer(ActivityDetailsHeader);\n","import { format } from \"date-fns\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/actvity\";\n\n\ninterface Props {\n  activity: Activity;\n}\n\nconst ActivityDetailsInfo = ({ activity }: Props) => {\n  return (\n    <Segment.Group>\n      <Segment attached=\"top\">\n        <Grid>\n          <Grid.Column width={1}>\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <p>{activity.description}</p>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <span>{format(activity.date!, 'dd MMM yy h:mm a')}</span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={11}>\n            <span>\n              {activity.venue}, {activity.city}\n            </span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n    </Segment.Group>\n  );\n};\n\n\nexport default observer(ActivityDetailsInfo);","import React from \"react\";\nimport { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react-lite\";\nimport { Activity } from \"../../../app/models/actvity\";\n\ninterface Props {\n  activity: Activity\n}\n\nconst ActivityDetailsSidebar = ({ activity: {attendees, host} }: Props) => {\n  if (!attendees) return null\n  return (\n    <>\n      <Segment\n        textAlign=\"center\"\n        style={{ border: \"none\" }}\n        attached=\"top\"\n        secondary\n        inverted\n        color=\"teal\"\n      >\n        {attendees.length} {attendees.length === 1 ? \"Person\" : \"People\"} going\n      </Segment>\n      <Segment attached>\n        <List relaxed divided>\n          {attendees.map((attendee) => (\n            <Item style={{ position: \"relative\" }} key={attendee.username}>\n            {attendee.username === host?.username &&\n              <Label\n                style={{ position: \"absolute\" }}\n                color=\"orange\"\n                ribbon=\"right\"\n              >\n                Host\n              </Label>}\n              <Image size=\"tiny\" src={attendee.image ||\"/assets/user.png\"} />\n              <Item.Content verticalAlign=\"middle\">\n                <Item.Header as=\"h3\">\n                  <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\n                </Item.Header>\n                <Item.Extra style={{ color: \"orange\" }}>{attendee.following && \"Following\" }</Item.Extra>\n              </Item.Content>\n            </Item>\n          ))}\n        </List>\n      </Segment>\n    </>\n  );\n};\n\nexport default observer(ActivityDetailsSidebar);\n","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Grid, GridColumn} from \"semantic-ui-react\";\nimport LoadingComponent from \"../../../app/Layout/LoadingComponent\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityDetailsChat from \"./ActivityDetailsChat\";\nimport ActivityDetailsHeader from \"./ActivityDetailsHeader\";\nimport ActivityDetailsInfo from \"./ActivityDetailsInfo\";\nimport ActivityDetailsSidebar from \"./ActivityDetailsSidebar\";\n\n\nconst ActivityDetails = () => {\n  const {id} = useParams<{id: string}>();\n  const { activityStore } = useStore();\n  const { selectedActivity, loadActivity, loadingInitial, clearSelectedActivity } = activityStore;\n  \n  useEffect(() => {\n    if (id) loadActivity(id)\n    return () => clearSelectedActivity();\n  }, [id, loadActivity, clearSelectedActivity]);\n  \n  if (loadingInitial || !selectedActivity) return <LoadingComponent />;\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <ActivityDetailsHeader activity={selectedActivity} />\n        <ActivityDetailsInfo activity={selectedActivity} />\n        <ActivityDetailsChat activityId={selectedActivity.id}/>\n      </Grid.Column>\n      <GridColumn width={6}>\n        <ActivityDetailsSidebar activity={selectedActivity}/>\n      </GridColumn>\n    </Grid>\n  );\n}\n\nexport default observer(ActivityDetails);","import React, { useState } from \"react\";\nimport { Button, Header, Segment } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport ValidationErrors from \"./ValidationErrors\";\n\nexport default function TestErrors() {\n  const baseUrl = process.env.REACT_APP_API_URL;\n  const [errors, setErrors] = useState(null);\n\n  function handleNotFound() {\n    axios\n      .get(baseUrl + \"buggy/not-found\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleBadRequest() {\n    axios\n      .get(baseUrl + \"buggy/bad-request\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleServerError() {\n    axios\n      .get(baseUrl + \"buggy/server-error\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleUnauthorised() {\n    axios\n      .get(baseUrl + \"buggy/unauthorised\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleBadGuid() {\n    axios\n      .get(baseUrl + \"activities/notaguid\")\n      .catch((err) => console.log(err));\n  }\n\n  function handleValidationError() {\n    axios.post(baseUrl + \"activities\", {}).catch((err) => setErrors(err));\n  }\n\n  return (\n    <>\n      <Header as=\"h1\" content=\"Test Error component\" />\n      <Segment>\n        <Button.Group widths=\"7\">\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\n          <Button\n            onClick={handleBadRequest}\n            content=\"Bad Request\"\n            basic\n            primary\n          />\n          <Button\n            onClick={handleValidationError}\n            content=\"Validation Error\"\n            basic\n            primary\n          />\n          <Button\n            onClick={handleServerError}\n            content=\"Server Error\"\n            basic\n            primary\n          />\n          <Button\n            onClick={handleUnauthorised}\n            content=\"Unauthorised\"\n            basic\n            primary\n          />\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\n        </Button.Group>\n      </Segment>\n      {errors &&\n        <ValidationErrors errors={errors} />}\n    </>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\n\nconst NotFound = () => {\n  return (\n    <Segment placeholder>\n      <Header icon>\n        <Icon name=\"search\" />\n        Oops - Looks like theres nothing here\n      </Header>\n      <Segment.Inline>\n        <Button as={Link} to=\"/activities\" primary>\n          Take me back!\n        </Button>{\" \"}\n      </Segment.Inline>\n    </Segment>\n  );\n};\n\nexport default NotFound;\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Container, Header, Segment } from 'semantic-ui-react';\nimport { useStore } from '../../app/stores/store';\n\nconst ServerError = () => {\n    const { commonStore } = useStore();\n    return (\n        <Container>\n            <Header as='h1' content='Server Error'/>\n            <Header sub as='h5' color='red' content={commonStore.error?.message} />\n            {commonStore.error?.details &&\n                <Segment>\n                <Header as='h4' content='Stack trace' color='teal' />\n                <code style={{ marginTop: '10px' }}>{commonStore.error.details}</code>\n                </Segment>}\n            \n        </Container>\n    )\n}\n\n\n\nexport default observer(ServerError);","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Modal } from 'semantic-ui-react';\nimport { useStore } from '../../stores/store';\n\n\nconst ModalContainer = () => {\n    const { modalStore } = useStore();\n\n    return (\n        <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\n            <Modal.Content>\n                {modalStore.modal.body}\n            </Modal.Content>\n        </Modal>\n    )\n}\n\n\nexport default observer(ModalContainer);","\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\nimport * as Yup from 'yup';\nimport { Form, Formik } from \"formik\";\n\n\ninterface Props {\n  setEditMode: (editMode: boolean) => void;\n}\n\nconst ProfileDescription = ({setEditMode}:Props) => {\n    const { profileStore: {profile, updateProfile} } = useStore();\n    \n    const validationSchema = Yup.object({\n        displayName: Yup.string().required('A Display Name is Required')\n    })\n\n  return (\n    <Formik\n      initialValues={{\n        displayName: profile?.displayName,\n        bio: profile?.bio,\n      }}\n      onSubmit={(values) => {\n        updateProfile(values).then(() => {\n          setEditMode(false);\n        });\n      }}\n      validationSchema={validationSchema}\n    >\n      {({ isSubmitting, isValid, dirty }) => (\n        <Form className=\"ui form\" >\n          <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\n          <MyTextArea placeholder=\"Add your Bio\" name=\"bio\" rows={5} />\n          <Button\n            loading={isSubmitting}\n            positive\n            content=\"Update Profile\"\n            type=\"submit\"\n            floated=\"right\"\n            disabled={!isValid || !dirty}\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default observer(ProfileDescription);\n","import { observer } from 'mobx-react-lite';\nimport React, { useState } from 'react';\nimport { Button, Grid, Header, Tab } from 'semantic-ui-react';\nimport { useStore } from '../../app/stores/store';\nimport ProfileEdit from './ProfileEdit';\n\nconst ProfileAbout = () => {\n    const { profileStore: { isCurrentUser, profile } } = useStore();\n    const [editMode, setEditMode] = useState<boolean>(false);\n\n    return (\n        <Tab.Pane>\n            <Grid>\n                <Grid.Column width='16'>\n                    <Header floated='left' icon='user' content={`About ${profile?.displayName}`} />\n                    {isCurrentUser && (\n                        <Button floated='right' basic content={editMode ? 'Cancel' : 'Edit Profile'}\n                            onClick={() => setEditMode(!editMode)}/>\n                    )}\n                </Grid.Column>\n                <Grid.Column width='16'>\n                    {editMode ? <ProfileEdit setEditMode={setEditMode} /> :\n                        <span style={{ whiteSpace: 'pre-wrap' }}>{profile?.bio}</span>}\n                </Grid.Column>\n            </Grid>\n        </Tab.Pane>\n    )\n}\n\nexport default observer(ProfileAbout)","import React from \"react\";\r\nimport { Card, Image } from \"semantic-ui-react\";\r\nimport { UserActivity } from \"../../../app/models/profile\";\r\nimport { format } from \"date-fns\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  activity: UserActivity;\r\n}\r\n\r\nconst ProfileActivitiesCard = ({activity} : Props) => {\r\n\r\n  return (\r\n    <Card as={Link} to={`/activities/${activity.id}`}>\r\n      <Image src={`/assets/categoryImages/${activity.category}.jpg`} style={{minHeight: 100, objectFit: 'cover'}}/>\r\n      <Card.Content>\r\n        <Card.Header textAlign='center'>{activity.title}</Card.Header>\r\n        <Card.Meta textAlign='center'>\r\n          <div>{format(new Date(activity.date), 'do LLL')}</div>\r\n          <div>{format(new Date(activity.date), 'h:mm a')}</div>\r\n        </Card.Meta>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProfileActivitiesCard;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Card, Tab } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ProfileActivitiesCard from './ProfileActivitiesCard';\r\n\r\n\r\nconst ProfileActivityLayout = () => {\r\n    \r\n    const {profileStore: {loadingActivities, userActivites}} = useStore();\r\n    \r\n    return (<Tab.Pane loading={loadingActivities}>\r\n        <Card.Group itemsPerRow={4}>\r\n            {userActivites.map(activity => <ProfileActivitiesCard key={activity.id} activity={activity}/>)}\r\n        </Card.Group>\r\n        \r\n        </Tab.Pane>\r\n)\r\n}\r\n\r\nexport default observer(ProfileActivityLayout);","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Tab } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ProfileActivityLayout from './ProfileActivityLayout';\r\n\r\n\r\n\r\nconst ProfileActivities = () => {\r\n    const { profileStore: { setActivityTab, activityTab } } = useStore();\r\n\r\n    const panes = [\r\n      { menuItem: \"Future Events\", render: () => <ProfileActivityLayout /> },\r\n      { menuItem: \"Past Events\", render: () => <ProfileActivityLayout /> },\r\n      {\r\n        menuItem: \"Events I'm Hosting\",\r\n        render: () => <ProfileActivityLayout />,\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <Tab.Pane>\r\n            <Tab\r\n          panes={panes}\r\n          onTabChange={(_, data) => setActivityTab(+data.activeIndex!)}\r\n          activeIndex={activityTab}\r\n        />\r\n      </Tab.Pane>\r\n    );\r\n}\r\n\r\nexport default observer(ProfileActivities);","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Card, Grid, Header, Tab } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileCard from './ProfileCard';\r\n\r\n\r\nconst ProfileFollowing = () => {\r\n    const {\r\n      profileStore: {loadingFollow, followings, profile, activeTab },\r\n    } = useStore();\r\n\r\n\r\n\r\n    return (\r\n      <Tab.Pane loading={loadingFollow}>\r\n        <Grid>\r\n          <Grid.Column width={16}>\r\n            <Header\r\n              floated=\"left\"\r\n              icon=\"user\"\r\n              content={activeTab === 3 ? `${profile?.displayName}'s Followers` : `People following ${profile?.displayName}` }\r\n            />\r\n          </Grid.Column>\r\n          <Grid.Column width={16}>\r\n            <Card.Group itemsPerRow={4}>\r\n              {followings.map((profile) => (\r\n                <ProfileCard key={profile.username} profile={profile} />\r\n              ))}\r\n            </Card.Group>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Tab.Pane>\r\n    );\r\n}\r\n\r\n\r\nexport default observer(ProfileFollowing);","import React from \"react\";\nimport { Cropper } from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\n\ninterface Props {\n  imagePreview: string;\n  setCropper: (cropper: Cropper) => void;\n}\n\nconst PhotoWidgetCropper = ({ imagePreview, setCropper }: Props) => {\n  return (\n    <Cropper\n      src={imagePreview}\n      style={{ height: 200, width: \"100%\" }}\n      initialAspectRatio={1}\n      aspectRatio={1}\n      preview=\".img-preview\"\n      guides={false}\n      viewMode={1}\n      autoCropArea={1}\n      background={false}\n      onInitialized={(cropper) => setCropper(cropper)}\n    />\n  );\n};\n\nexport default PhotoWidgetCropper;\n","import React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { Header, Icon } from \"semantic-ui-react\";\n\ninterface Props {\n  setFiles: (files: any) => void;\n}\n\nconst PhotoWidgetDropzone = ({ setFiles }: Props) => {\n  const dzStyles = {\n    border: \"dashed 3px #eee\",\n    borderColor: \"#eee\",\n    borderRadius: \"5px\",\n    paddingTop: \"30px\",\n    textAlign: \"center\" as \"center\",\n    height: 200,\n  };\n\n  const dzActive = {\n    borderColor: \"green\",\n  };\n\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      setFiles(\n        acceptedFiles.map((file: any) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          })\n        )\n      );\n    },\n    [setFiles]\n  );\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  return (\n    <div\n      {...getRootProps()}\n      style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}\n    >\n      <input {...getInputProps()} />\n      <Icon name='upload' size='huge' />\n      <Header content='Drop image here' />\n    </div>\n  );\n};\n\nexport default PhotoWidgetDropzone;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Container,\n  Grid,\n  Header,\n} from \"semantic-ui-react\";\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\n\ninterface Props {\n  loading: boolean,\n  uploadPhoto: (file:Blob) => void\n}\n\nconst PhotoUploadWidget = ({loading, uploadPhoto} : Props) => {\n  const [files, setFiles] = useState<any>([]);\n  const [cropper, setCropper] = useState<Cropper>();\n\n  function onCrop() {\n    if (cropper) {\n      cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!));\n    }\n  }\n\n  useEffect(() => {\n    return () => {\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\n    };\n  }, [files]);\n\n  return (\n    <Grid>\n      {files && files.length > 0 && (\n        <>\n          <Grid.Column width={1} />\n          <Grid.Column width={4}>\n            <Header sub color=\"teal\" content=\"Resize Image\" />\n            <PhotoWidgetCropper\n              setCropper={setCropper}\n              imagePreview={files[0].preview}\n            />\n          </Grid.Column>\n          <Grid.Column width={4} />\n          <Grid.Column width={6}>\n            <Header sub color=\"teal\" content=\"Preview & Upload\" />\n            <>\n              <Container textAlign=\"center\">\n                <div\n                  className=\"img-preview\"\n                  style={{ minHeight: 200, overflow: \"hidden\" }}\n                />\n              </Container>\n            </>\n          </Grid.Column>\n          <Grid.Row centered>\n            <Button.Group>\n              <Button onClick={() => setFiles([])} disabled={loading} icon=\"trash alternate\" />\n              <Button onClick={onCrop} positive loading={loading} icon=\"check\" />\n            </Button.Group>\n          </Grid.Row>\n        </>\n      )}\n\n      {files.length === 0 && (\n        <Grid.Column width={6}>\n          <Header sub color=\"teal\" content=\"Add Photo\" />\n          <PhotoWidgetDropzone setFiles={setFiles} />\n        </Grid.Column>\n      )}\n    </Grid>\n  );\n};\n\nexport default PhotoUploadWidget;\n","import React, { SyntheticEvent } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { useState } from \"react\";\nimport { Card, Header, Tab, Image, Grid, Button } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\nimport { Photo } from \"../../app/models/profile\";\n\nconst ProfilePhotos = () => {\n  const {\n    profileStore: {\n      isCurrentUser,\n      profile,\n      uploadPhoto,\n      uploading,\n      loading,\n      setMainPhoto,\n      deletePhoto\n    },\n  } = useStore();\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\n  const [target, setTarget] = useState(\"\");\n\n  function setMainPhotoHandler(\n    photo: Photo,\n    event: SyntheticEvent<HTMLButtonElement>\n  ) {\n    setTarget(event.currentTarget.name);\n    setMainPhoto(photo);\n  }\n  function deletePhotoHandler(\n    photo: Photo,\n    event: SyntheticEvent<HTMLButtonElement>\n  ) {\n    setTarget(event.currentTarget.name);\n    deletePhoto(photo);\n  };\n\n  function photoUploadHandler(file: Blob) {\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\n  }\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\n          {isCurrentUser && (\n            <Button\n              floated=\"right\"\n              basic\n              size=\"small\"\n              content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\n              color={addPhotoMode ? \"red\" : \"green\"}\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width={16}>\n          {addPhotoMode ? (\n            <PhotoUploadWidget\n              uploadPhoto={photoUploadHandler}\n              loading={uploading}\n            />\n          ) : (\n            <Card.Group itemsPerRow={4}>\n              {profile!.photos?.map((photo) => (\n                <Card key={photo.id}>\n                  <Image src={photo.url} />\n                  {isCurrentUser && (\n                    <Button.Group fluid widths={2}>\n                      <Button\n                        basic\n                        color=\"green\"\n                        icon=\"eye\"\n                        name={'main' + photo.id}\n                        disabled={photo.isMain}\n                        loading={target === 'main' + photo.id && loading}\n                        onClick={(e) => setMainPhotoHandler(photo, e)}\n                      />\n                      <Button\n                        basic\n                        disabled={photo.isMain}\n                        name={photo.id}\n                        loading={target === photo.id && loading}\n                        color=\"red\"\n                        icon=\"trash\"\n                        onClick={(e) => deletePhotoHandler(photo, e)}\n                      />\n                    </Button.Group>\n                  )}\n                </Card>\n              ))}\n            </Card.Group>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n};\n\nexport default observer(ProfilePhotos);\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Tab } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport ProfileActivities from \"./ProfileActivities/ProfileActivities\";\nimport ProfileFollow from \"./ProfileFollow\";\nimport ProfilePhotos from \"./ProfilePhotos\";\n\n\nconst ProfileContent = () => {\n  const {\n    profileStore: { activeTab, setActiveTab },\n  } = useStore();\n  \n\n\n  const panes = [\n    {\n      menuItem: \"About\",\n      render: () => <ProfileAbout />,\n    },\n    { menuItem: \"Photos\", render: () => <ProfilePhotos /> },\n    { menuItem: \"Events\", render: () => <ProfileActivities/> },\n    {\n      menuItem: \"Followers\",\n      render: () => <ProfileFollow />,\n    },\n    {\n      menuItem: \"Following\",\n      render: () => <ProfileFollow />,\n    },\n  ];\n  return (\n    <Tab\n      menu={{ fluid: true, vertical: true }}\n      menuPosition=\"right\"\n      panes={panes}\n      onTabChange={(_, data) => setActiveTab(+data.activeIndex!)}\n      activeIndex={activeTab}\n    />\n  );\n};\n\nexport default observer(ProfileContent);\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport {\n  Divider,\n  Grid,\n  Header,\n  Item,\n  Reveal,\n  Segment,\n  Statistic,\n} from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\nimport FollowButton from \"./FollowButton\";\n\nconst ProfileHeader = () => {\n  const { profileStore } = useStore();\n  return (\n    <Segment>\n      <Grid>\n        <Grid.Column width={12}>\n          <Item.Group>\n            <Item>\n              <Item.Image\n                avatar\n                size=\"small\"\n                src={profileStore.profile!.image || \"/assets/user.png\"}\n              />\n              <Item.Content verticalAlign=\"middle\">\n                <Header as=\"h1\" content={profileStore.profile!.displayName} />\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Statistic.Group widths={2}>\n            <Statistic\n              label=\"Followers\"\n              value={profileStore.profile?.followersCount}\n            />\n            <Statistic\n              label=\"Following\"\n              value={profileStore.profile?.followingCount}\n            />\n          </Statistic.Group>\n          <Divider />\n          <Reveal animated=\"move\">\n            <FollowButton profile={profileStore.profile!} />\n          </Reveal>\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  );\n};\n\nexport default observer(ProfileHeader);\n","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Grid } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../app/Layout/LoadingComponent\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileContent from \"./ProfileContent\";\nimport ProfileHeader from \"./ProfileHeader\";\n\nconst ProfilePage = () => {\n  const { profileStore } = useStore();\n  const { profile, loadProfile, loadingProfile, setActiveTab} = profileStore;\n  const { username } = useParams<{ username: string }>();\n\n\n\n  useEffect(() => {\n    loadProfile(username);\n    return () => {\n      setActiveTab(0);\n    }\n  }, [username, loadProfile, setActiveTab]);\n\n  if (loadingProfile) return <LoadingComponent />;\n  else\n    return (\n      <Grid>\n        <Grid.Column width={16}>\n          {profile && (\n            <>\n              <ProfileHeader />\n              <ProfileContent />\n            </>\n          )}\n        </Grid.Column>\n      </Grid>\n    );\n};\n\nexport default observer(ProfilePage);\n","import { observer } from 'mobx-react-lite';\r\nimport React, { ComponentType } from 'react';\r\nimport { Redirect, RouteComponentProps, RouteProps } from 'react-router';\r\nimport { Route } from 'react-router-dom';\r\nimport { useStore } from '../stores/store';\r\n\r\ninterface Props extends RouteProps {\r\n    component: ComponentType<RouteComponentProps<any>> | ComponentType<any>;\r\n }\r\n\r\nconst PrivateRoute = ({component: Component, ...rest} : Props) => {\r\n    const {userStore : {isLoggedIn}} = useStore();\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => isLoggedIn ? <Component {...props}/> : <Redirect to='/'/>}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nexport default observer(PrivateRoute);","import React, { useEffect } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport NavBar from \"./NavBar\";\nimport ActivityDashboard from \"../../features/Activities/Dashboard/ActivityDashboard\";\nimport { observer } from \"mobx-react-lite\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\nimport HomePage from \"../../features/home/HomePage\";\nimport ActivityForm from \"../../features/Activities/Form/ActivityForm\";\nimport ActivityDetails from \"../../features/Activities/Details/ActivityDetails\";\nimport TestErrors from \"../../features/errors/TestError\";\nimport { ToastContainer } from \"react-toastify\";\nimport NotFound from \"../../features/errors/NotFound\";\nimport ServerError from \"../../features/errors/ServerError\";\nimport { useStore } from \"../stores/store\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport ProfilePage from \"../../features/Profiles/ProfilePage\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nfunction App() {\n  const location = useLocation();\n  const { commonStore, userStore } = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded())\n    } else {\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore]);\n\n  if (!commonStore.appLoaded) return <LoadingComponent content='Loading app...'/>\n  return (\n    <>\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\n      <ModalContainer />\n      <Route exact path=\"/\" component={HomePage} />\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <>\n            {userStore.isLoggedIn && <NavBar />}\n            <Container style={{ marginTop: \"7em\" }}>\n              <Switch>\n                <PrivateRoute\n                  exact\n                  path=\"/activities\"\n                  component={ActivityDashboard}\n                />\n                <PrivateRoute\n                  exact\n                  path=\"/activities/:id\"\n                  component={ActivityDetails}\n                />\n                <PrivateRoute\n                  key={location.key}\n                  path={[\"/createActivity\", \"/manage/:id\"]}\n                  component={ActivityForm}\n                />\n                <PrivateRoute\n                  path=\"/profiles/:username\"\n                  component={ProfilePage}\n                />\n                <PrivateRoute path=\"/errors\" component={TestErrors} />\n                <Route path=\"/server-error\" component={ServerError} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst ScrollToTop = () => {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n  return null;\r\n};\r\n\r\nexport default ScrollToTop;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './app/Layout/Calendar.css'\nimport \"./app/Layout/styles.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport App from \"./app/Layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store, StoreContext } from \"./app/stores/store\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from 'history';\nimport ScrollToTop from \"./app/Layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop/>\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}