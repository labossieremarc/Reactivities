{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/actvity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/Layout/NavBar.tsx","features/Activities/Dashboard/ActivityFilters.tsx","features/Profiles/FollowButton.tsx","features/Profiles/ProfileCard.tsx","features/Activities/Dashboard/ActivityListIemAttendee.tsx","features/Activities/Dashboard/AcivityListItem.tsx","features/Activities/Dashboard/ActivityList.tsx","features/Activities/Dashboard/ActivityListItemPlaceHolder.tsx","features/Activities/Dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/Layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/CategoryOptions.ts","app/common/form/MyDateInput.tsx","features/Activities/Form/ActivityForm.tsx","features/Activities/Details/ActivityDetailsChat.tsx","features/Activities/Details/ActivityDetailsHeader.tsx","features/Activities/Details/ActivityDetailsInfo.tsx","features/Activities/Details/ActivityDetailsSidebar.tsx","features/Activities/Details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/Profiles/ProfileEdit.tsx","features/Profiles/ProfileAbout.tsx","features/Profiles/ProfileActivities/ProfileActivitiesCard.tsx","features/Profiles/ProfileActivities/ProfileActivityLayout.tsx","features/Profiles/ProfileActivities/ProfileActivities.tsx","features/Profiles/ProfileFollow.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/Profiles/ProfilePhotos.tsx","features/Profiles/ProfileContent.tsx","features/Profiles/ProfileHeader.tsx","features/Profiles/ProfilePage.tsx","app/Layout/PrivateRoute.tsx","app/Layout/App.tsx","reportWebVitals.ts","app/Layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","Object","values","flat","startsWith","userStore","logout","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","fbLogin","accessToken","refreshToken","Profiles","selected","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","toggleFollow","listFollowing","predicate","listActivites","Activity","init","assign","ActivityFormValues","title","category","description","date","city","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","undefined","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","key","loadActivities","setLoadingInitial","axiosParams","result","setActivity","setPagination","console","log","loadActivity","getActivity","runInAction","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeDisplayName","bio","updateAttendeeImage","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","loadingProfile","uploading","followings","loadingFollow","activeTab","userActivites","loadingActivities","activityTab","setActivityTab","setActiveTab","resetProfile","loadProfile","photo","photos","isMain","setImage","activityStore","p","setDisplayName","followingCount","loadFollowings","loadUserActivities","profileStore","UserStore","fbAccessToken","fbLoading","refreshTokenTimeOut","creds","setToken","startRefreshTokenTimer","modalStore","closeModal","window","localStorage","removeItem","getUser","name","getFacebookLoginStatus","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","scope","stopRefreahTokenTimer","jwtToken","atob","split","timeout","exp","now","setTimeout","clearTimeout","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","className","onChange","Reveal","animated","Content","visible","fluid","hidden","basic","event","preventDefault","followHandler","Card","Description","length","substring","truncate","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","useState","index","activeIndex","setActiveIndex","Segment","Group","Label","textAlign","marginBottom","Accordion","Title","prevState","secondary","ActivityListIemAttendee","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceHolder","margin","Placeholder","minHeight","Line","Paragraph","disabled","contextRef","useRef","loadingNext","setLoadingNext","useEffect","Grid","Column","Ref","innerRef","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Rail","Sticky","context","offset","styleElement","zIndex","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","autoCapitalize","placeholder","type","render","ValidationErrors","Message","err","confirmPassword","validationSchema","Yup","required","test","parent","isValid","dirty","isLoggedIn","Divider","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","_","setValue","onBlur","setTouched","categoryOptions","MyDateInput","useParams","useHistory","nullable","enableReinitialize","uuid","submitHandler","autoComplete","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","Or","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","stye","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","top","ribbon","verticalAlign","relaxed","divided","Extra","GridColumn","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","setEditMode","isCurrentUser","Tab","Pane","ProfileEdit","ProfileActivitiesCard","objectFit","Meta","itemsPerRow","panes","menuItem","onTabChange","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","Row","centered","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","e","currentTarget","setMainPhotoHandler","deletePhotoHandler","ProfileFollow","menu","menuPosition","Statistic","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.6fe2d862.chunk.js","sourcesContent":["export interface Pagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n    data: T;\r\n    pagination: Pagination;\r\n\r\n    constructor(data: T, pagination: Pagination) {\r\n        this.data = data;\r\n        this.pagination = pagination;\r\n    }\r\n}\r\n\r\nexport class PagingParams {\r\n    pageNumber: number;\r\n    pageSize: number;\r\n\r\n    constructor(pageNumber: number = 1, pageSize: number = 3) {\r\n        this.pageNumber = pageNumber;\r\n        this.pageSize = pageSize;\r\n    }\r\n}","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Activity, ActivityFormValues } from \"../models/actvity\";\r\nimport { history } from \"../../index\";\r\nimport { store } from \"../stores/store\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { PaginatedResult } from \"../models/pagination\";\r\n\r\nconst sleep = (delay: number) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n};\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use((config) => {\r\n  const token = store.commonStore.token;\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n  async (response) => {\r\n    if (process.env.NODE_ENV === \"development\") await sleep(1000);\r\n    const pagination = response.headers[\"pagination\"];\r\n    if (pagination) {\r\n      response.data = new PaginatedResult(\r\n        response.data,\r\n        JSON.parse(pagination)\r\n      );\r\n      return response as AxiosResponse<PaginatedResult<any>>;\r\n    }\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    const { data, status, config, headers } = error.response!;\r\n    switch (status) {\r\n      case 400:\r\n        if (typeof data === \"string\") toast.error(data);\r\n        if (config.method === \"get\" && data.errors.hasOwnProperty(\"id\")) {\r\n          history.push(\"/not-found\");\r\n        }\r\n        if (data.errors) {\r\n          const modalStateErrors = Object.values(data.errors);\r\n          throw modalStateErrors.flat();\r\n        }\r\n        break;\r\n      case 401:\r\n        if (\r\n          status === 401 &&\r\n          headers[\"www-authenticate\"].startsWith('Bearer error=\"invalid_token\"')\r\n        ) {\r\n          store.userStore.logout();\r\n          toast.error(\"Session expired - please login\");\r\n        }\r\n        toast.error(\"Unauthorized\");\r\n        break;\r\n      case 404:\r\n        history.push(\"/not-found\");\r\n        break;\r\n      case 500:\r\n        store.commonStore.setServerError(data);\r\n        history.push(\"/server-error\");\r\n        break;\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) =>\r\n    axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Activities = {\r\n  list: (params: URLSearchParams) =>\r\n    axios\r\n      .get<PaginatedResult<Activity[]>>(\"/activities\", { params })\r\n      .then(responseBody),\r\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n  create: (activity: ActivityFormValues) =>\r\n    requests.post<void>(\"/activities\", activity),\r\n  update: (activity: ActivityFormValues) =>\r\n    requests.put<void>(`/activities/${activity.id}`, activity),\r\n  delete: (id: string) => requests.del<void>(`/activities/${id}`),\r\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\r\n};\r\n\r\nconst Account = {\r\n  current: () => requests.get<User>(\"/account\"),\r\n  login: (user: UserFormValues) => requests.post<User>(\"/account/login\", user),\r\n  register: (user: UserFormValues) =>\r\n    requests.post<User>(\"/account/register\", user),\r\n  fbLogin: (accessToken: string) =>\r\n    requests.post<User>(`/account/fbLogin?accessToken=${accessToken}`, {}),\r\n  refreshToken: () => requests.post<User>(\"/account/refreshToken\", {}),\r\n};\r\nconst Profiles = {\r\n  selected: (username: string) =>\r\n    requests.get<Profile>(`/profiles/${username}`),\r\n  uploadPhoto: (file: Blob) => {\r\n    let formData = new FormData();\r\n    formData.append(\"File\", file);\r\n    return axios.post<Photo>(\"photos\", formData, {\r\n      headers: { \"Content-type\": \"multipart/form-data\" },\r\n    });\r\n  },\r\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n  updateProfile: (profile: Partial<Profile>) =>\r\n    requests.put(\"/profiles\", profile),\r\n  toggleFollow: (username: string) => requests.post(`/follow/${username}`, {}),\r\n  listFollowing: (username: string, predicate: string) =>\r\n    requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n  listActivites: (username: string, predicate: string) =>\r\n    requests.get<UserActivity[]>(\r\n      `/profiles/${username}/activities?predicate=${predicate}`\r\n    ),\r\n};\r\n\r\nconst agent = {\r\n  Activities,\r\n  Account,\r\n  Profiles,\r\n};\r\n\r\nexport default agent;\r\n","import { Profile } from \"./profile\";\n\nexport interface Activity {\n  id: string;\n  title: string;\n  date: Date | null;\n  description: string;\n  category: string;\n  city: string;\n  venue: string;\n  hostUsername: string;\n  isCancelled: boolean;\n  isGoing: boolean;\n  isHost: boolean;\n  host?: Profile;\n  attendees: Profile[];\n}\n\nexport class Activity implements Activity {\n  constructor(init?: ActivityFormValues) {\n    Object.assign(this, init)\n  }\n}\n\nexport class ActivityFormValues {\n  id?: string = '';\n  title: string = \"\";\n  category: string = \"\";\n  description: string = \"\";\n  date: Date | null = null;\n  city: string = \"\";\n  venue: string = \"\";\n\n  constructor(activity?: ActivityFormValues) {\n    if (activity) {\n      this.id = activity.id;\n      this.title = activity.title;\n      this.category = activity.category;\n      this.description = activity.description;\n      this.date = activity.date;\n      this.city = activity.city;\n      this.venue = activity.venue;\n    }\n  }\n}\n","import { User } from \"./user\";\n\nexport interface Profile {\n    username: string;\n    displayName: string;\n    image?: string;\n    bio?: string;\n    followersCount: number;\n    followingCount: number;\n    following: boolean;\n    photos?: Photo[];\n}\n\nexport class Profile implements Profile {\n    constructor(user: User) {\n        this.username = user.username;\n        this.displayName = user.displayName;\n        this.image = user.image;\n    }\n}\n\nexport interface Photo {\n    id: string;\n    url: string;\n    isMain: boolean;\n}\n\nexport interface UserActivity {\n    id: string;\n    title: string;\n    category: string;\n    date: Date;\n}","import { format } from \"date-fns\";\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Activity, ActivityFormValues } from \"../models/actvity\";\nimport { Pagination, PagingParams } from \"../models/pagination\";\nimport { Profile } from \"../models/profile\";\nimport { store } from \"./store\";\n\nexport default class ActivityStore {\n  activityRegistry = new Map<string, Activity>();\n  selectedActivity: Activity | undefined = undefined;\n  editMode = false;\n  loading = false;\n  loadingInitial = false;\n  pagination: Pagination | null = null;\n  pagingParams = new PagingParams();\n  predicate = new Map().set('all', true)\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.predicate.keys(),\n      () => {\n        this.pagingParams = new PagingParams();\n        this.activityRegistry.clear();\n        this.loadActivities();\n      }\n    )\n  }\n\n  setPagingParams = (pagingParams: PagingParams) => {\n    this.pagingParams = pagingParams;\n  };\n\n  setPredicate = (predicate: string, value: string | Date) => {\n    const resetPredicate = () => {\n      this.predicate.forEach((value, key) => {\n        if (key !== 'startDate') this.predicate.delete(key)\n      })\n    }\n    switch (predicate) {\n      case \"all\":\n        resetPredicate();\n        this.predicate.set(\"all\", true);\n        break;\n      case \"isGoing\":\n        resetPredicate();\n        this.predicate.set(\"isGoing\", true);\n        break;\n      case \"isHost\":\n        resetPredicate();\n        this.predicate.set(\"isHost\", true);\n        break;\n      case 'startDate':\n        this.predicate.delete(\"startDate\");\n        this.predicate.set('startDate', value)\n        break;\n    }\n  }\n\n  get axiosParams() {\n    const params = new URLSearchParams();\n    params.append(\"pageNumber\", this.pagingParams.pageNumber.toString());\n    params.append(\"pageSize\", this.pagingParams.pageSize.toString());\n    this.predicate.forEach((value, key) => {\n      if (key === 'startDate') {\n        params.append(key, (value as Date).toISOString())\n      } else {\n        params.append(key, value)\n      }\n    })\n    return params;\n  }\n\n  get activitiesByDate() {\n    return Array.from(this.activityRegistry.values()).sort(\n      (a, b) => a.date!.getTime() - b.date!.getTime()\n    );\n  }\n\n  get groupedActivities() {\n    return Object.entries(\n      this.activitiesByDate.reduce((activities, activity) => {\n        const date = format(activity.date!, \"dd MMM yyyy\");\n        activities[date] = activities[date]\n          ? [...activities[date], activity]\n          : [activity];\n        return activities;\n      }, {} as { [key: string]: Activity[] })\n    );\n  }\n\n  loadActivities = async () => {\n    this.setLoadingInitial(true);\n    try {\n      let result = await agent.Activities.list(this.axiosParams);\n      result.data.forEach((activity) => {\n        this.setActivity(activity);\n      });\n      this.setPagination(result.pagination);\n      this.setLoadingInitial(false);\n    } catch (error) {\n      console.log(error);\n\n      this.setLoadingInitial(false);\n    }\n  };\n\n  setPagination = (pagination: Pagination) => {\n    this.pagination = pagination;\n  };\n\n  loadActivity = async (id: string) => {\n    let activity = this.getActivity(id);\n    if (activity) {\n      this.selectedActivity = activity;\n      return activity;\n    } else {\n      this.loadingInitial = true;\n      try {\n        activity = await agent.Activities.details(id);\n        this.setActivity(activity);\n        runInAction(() => {\n          this.selectedActivity = activity;\n        });\n        this.setLoadingInitial(false);\n        return activity;\n      } catch (error) {\n        console.log(error);\n        this.setLoadingInitial(false);\n      }\n    }\n  };\n\n  private setActivity = (activity: Activity) => {\n    const user = store.userStore.user;\n    if (user) {\n      activity.isGoing = activity.attendees!.some(\n        (a) => a.username === user.username\n      );\n      activity.isHost = activity.hostUsername === user.username;\n      activity.host = activity.attendees?.find(\n        (x) => x.username === activity.hostUsername\n      );\n    }\n    activity.date = new Date(activity.date!);\n    this.activityRegistry.set(activity.id, activity);\n  };\n\n  private getActivity = (id: string) => this.activityRegistry.get(id);\n\n  setLoadingInitial = (state: boolean) => {\n    this.loadingInitial = state;\n  };\n\n  createActivity = async (activity: ActivityFormValues) => {\n    const user = store.userStore.user;\n    const attendee = new Profile(user!);\n    try {\n      await agent.Activities.create(activity);\n      const newActivity = new Activity(activity);\n      newActivity.hostUsername = user!.username;\n      newActivity.attendees = [attendee];\n      this.setActivity(newActivity);\n      runInAction(() => {\n        this.selectedActivity = newActivity;\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  updateActivity = async (activity: ActivityFormValues) => {\n    try {\n      await agent.Activities.update(activity);\n      runInAction(() => {\n        if (activity.id) {\n          let updatedActivity = {\n            ...this.getActivity(activity.id),\n            ...activity,\n          };\n          this.activityRegistry.set(activity.id, updatedActivity as Activity);\n          this.selectedActivity = updatedActivity as Activity;\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  deleteActivity = async (id: string) => {\n    this.loading = true;\n    try {\n      await agent.Activities.delete(id);\n      runInAction(() => {\n        this.activityRegistry.delete(id);\n        this.loading = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => (this.loading = false));\n    }\n  };\n  updateAttendance = async () => {\n    const user = store.userStore.user;\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        if (this.selectedActivity?.isGoing) {\n          this.selectedActivity.attendees =\n            this.selectedActivity.attendees?.filter(\n              (a) => a.username !== user?.username\n            );\n          this.selectedActivity.isGoing = false;\n        } else {\n          const attendee = new Profile(user!);\n          this.selectedActivity?.attendees?.push(attendee);\n          this.selectedActivity!.isGoing = true;\n        }\n        this.activityRegistry.set(\n          this.selectedActivity!.id,\n          this.selectedActivity!\n        );\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.loading = false));\n    }\n  };\n  cancelActivityToggle = async () => {\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        this.selectedActivity!.isCancelled =\n          !this.selectedActivity?.isCancelled;\n        this.activityRegistry.set(\n          this.selectedActivity!.id,\n          this.selectedActivity!\n        );\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  clearSelectedActivity = () => {\n    this.selectedActivity = undefined;\n  };\n  updateAttendeeDisplayName = (username: string, update: Partial<Profile>) => {\n    this.activityRegistry.forEach((activity) => {\n      if (activity.hostUsername === username)\n        activity.host!.displayName = update.displayName!;\n      activity.attendees.forEach((attendee) => {\n        if (attendee.username === username) {\n          attendee.displayName = update.displayName!;\n          attendee.bio = update.bio;\n        }\n      });\n    });\n  };\n  updateAttendeeImage = (username: string, update: string) => {\n    this.activityRegistry.forEach((activity) => {\n      if (activity.hostUsername === username)\n        activity.host!.image = update;\n      activity.attendees.forEach((attendee) => {\n        if (attendee.username === username) {\n          attendee.image = update;\n        }\n      });\n    });\n  };\n\n  updateAttendeeFollowing = (username: string) => {\n    this.activityRegistry.forEach((activity) => {\n      activity.attendees.forEach((attendee) => {\n        if (attendee.username === username) {\n          attendee.following\n            ? attendee.followersCount--\n            : attendee.followersCount++;\n          attendee.following = !attendee.following;\n        }\n      });\n    });\n  };\n}\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\nimport { store } from \"./store\";\n\nexport default class ProfileStore {\n  profile: Profile | null = null;\n  loadingProfile: boolean = false;\n  uploading: boolean = false;\n  loading: boolean = false;\n  followings: Profile[] = [];\n  loadingFollow: boolean = false;\n  activeTab: number = 0;\n  userActivites: UserActivity[] = [];\n  loadingActivities: boolean = false;\n  activityTab: number = 4;\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.activeTab,\n      (activeTab) => {\n        if (activeTab === 3 || activeTab === 4) {\n          const predicate = activeTab === 3 ? \"followers\" : \"following\";\n          this.loadFollowings(predicate);\n        } else if (activeTab === 2){\n          this.activityTab = 0;\n        }else {\n          this.followings = [];\n          this.activityTab = 4;\n        }\n      },\n    );\n    reaction(\n      () => this.activityTab,\n      (activityTab) => {\n        switch (activityTab) {\n          case 0:\n            this.loadUserActivities(\n              store.profileStore.profile!.username,\n              \"future\"\n            );\n            break;\n          case 1:\n            this.loadUserActivities(\n              store.profileStore.profile!.username,\n              \"past\"\n            );\n            break;\n          case 2:\n            this.loadUserActivities(\n              store.profileStore.profile!.username,\n              \"hosting\"\n            );\n            break;\n        }\n      }\n    )\n  }\n  setActivityTab = (activityTab: number) => {\n    this.activityTab = activityTab;\n  }\n\n  setActiveTab = (activeTab: number) => {\n    this.activeTab = activeTab;\n  };\n\n  get isCurrentUser() {\n    if (store.userStore.user && this.profile)\n      return store.userStore.user.username === this.profile.username;\n    else return false;\n  }\n  resetProfile = () => {\n    this.profile = null;\n  };\n\n  loadProfile = async (username: string) => {\n    this.loadingProfile = true;\n    try {\n      const profile = await agent.Profiles.selected(username);\n      runInAction(() => {\n        this.profile = profile;\n        this.loadingProfile = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => (this.loadingProfile = false));\n    }\n  };\n  uploadPhoto = async (file: Blob) => {\n    this.uploading = true;\n    try {\n      const response = await agent.Profiles.uploadPhoto(file);\n      const photo = response.data;\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.photos?.push(photo);\n          if (photo.isMain && store.userStore.user) {\n            store.userStore.setImage(photo.url);\n            this.profile.image = photo.url;\n          }\n        }\n        this.uploading = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => (this.uploading = false));\n    }\n  };\n\n  setMainPhoto = async (photo: Photo) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.setMainPhoto(photo.id);\n      store.userStore.setImage(photo.url);\n      store.activityStore.updateAttendeeImage(this.profile!.username, photo.url)\n      runInAction(() => {\n        if (this.profile && this.profile.photos) {\n          this.profile.photos.find((p) => p.isMain)!.isMain = false;\n          this.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\n          this.profile.image = photo.url;\n          this.loading = false;\n        }\n      });\n    } catch (error) {\n      runInAction(() => (this.loading = false));\n      console.log(error);\n    }\n  };\n  deletePhoto = async (photo: Photo) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.deletePhoto(photo.id);\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.photos = this.profile.photos?.filter(\n            (p) => p.id !== photo.id\n          );\n          this.loading = false;\n        }\n      });\n    } catch (error) {\n      runInAction(() => (this.loading = false));\n      console.log(error);\n    }\n  };\n  updateProfile = async (profile: Partial<Profile>) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.updateProfile(profile);\n      store.activityStore.updateAttendeeDisplayName(this.profile!.username, profile )\n      runInAction(() => {\n        if (\n          profile.displayName &&\n          profile.displayName !== store.userStore.user?.displayName\n        ) {\n          store.userStore.setDisplayName(profile.displayName);\n        }\n        this.profile = { ...this.profile, ...(profile as Profile) };\n        this.loading = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  toggleFollow = async (username: string, following: boolean) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.toggleFollow(username);\n      store.activityStore.updateAttendeeFollowing(username);\n      runInAction(() => {\n        if (\n          this.profile &&\n          this.profile.username !== store.userStore.user?.username &&\n          this.profile.username === username\n        ) {\n          following\n            ? this.profile.followersCount++\n            : this.profile.followersCount--;\n          this.profile.following = !this.profile.following;\n        }\n        if (this.profile && this.profile.username === store.userStore.user?.username) {\n          following\n            ? this.profile.followingCount++\n            : this.profile.followingCount--;\n        }\n        this.followings.forEach((profile) => {\n          if (profile.username === username) {\n            profile.following\n              ? profile.followersCount--\n              : profile.followersCount++;\n            profile.following = !profile.following;\n          }\n        });\n        this.loading = false;\n      });\n    } catch (error) {\n      runInAction(() => {\n        console.log(error);\n        this.loading = false;\n      });\n    }\n  };\n\n  loadFollowings = async (predicate: string) => {\n    this.loadingFollow = true;\n    try {\n      const followings = await agent.Profiles.listFollowing(\n        this.profile!.username,\n        predicate\n      );\n      runInAction(() => {\n        this.followings = followings;\n        this.loadingFollow = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loadingFollow = false;\n      });\n    }\n  };\n\n  loadUserActivities = async (username: string, predicate: string) => {\n    this.loadingActivities = true;\n    try {\n      const activities = await agent.Profiles.listActivites(username, predicate!);\n      runInAction(() => {\n        this.userActivites = activities;\n        this.loadingActivities = false;\n      })\n    } catch (error) {\n      console.log(error)\n      runInAction(() => {\n        this.loadingActivities = false;\n      })\n    }\n  }\n}\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore {\r\n  user: User | null = null;\r\n  fbAccessToken: string | null = null;\r\n  fbLoading: boolean = false;\r\n  refreshTokenTimeOut: any;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  login = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.login(creds);\r\n      store.commonStore.setToken(user.token);\r\n      this.startRefreshTokenTimer(user);\r\n      runInAction(() => (this.user = user));\r\n      history.push(\"/activities\");\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  logout = () => {\r\n    store.commonStore.setToken(null);\r\n    window.localStorage.removeItem(\"jwt\");\r\n    this.user = null;\r\n    store.profileStore.resetProfile();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  getUser = async () => {\r\n    try {\r\n      const user = await agent.Account.current();\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => (this.user = user));\r\n      this.startRefreshTokenTimer(user);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  register = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.register(creds);\r\n      store.commonStore.setToken(user.token);\r\n      this.startRefreshTokenTimer(user);\r\n      runInAction(() => (this.user = user));\r\n      history.push(\"/activities\");\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n  setImage = (image: string) => {\r\n    if (this.user) this.user.image = image;\r\n  };\r\n  setDisplayName = (name: string) => {\r\n    if (this.user) this.user.displayName = name;\r\n  };\r\n\r\n  getFacebookLoginStatus = async () => {\r\n    window.FB.getLoginStatus((response) => {\r\n      if (response.status === \"connected\") {\r\n        this.fbAccessToken = response.authResponse.accessToken;\r\n      }\r\n    });\r\n  };\r\n\r\n  facebookLogin = () => {\r\n    this.fbLoading = true;\r\n    const apiLogin = (accessToken: string) => {\r\n      agent.Account.fbLogin(accessToken)\r\n        .then((user) => {\r\n          store.commonStore.setToken(user.token);\r\n          this.startRefreshTokenTimer(user);\r\n          runInAction(() => {\r\n            this.user = user;\r\n            this.fbLoading = false;\r\n          });\r\n          history.push(\"/activities\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          runInAction(() => (this.fbLoading = false));\r\n        });\r\n    };\r\n\r\n    if (this.fbAccessToken) {\r\n      apiLogin(this.fbAccessToken);\r\n    } else {\r\n      window.FB.login(\r\n        (response) => {\r\n          apiLogin(response.authResponse.accessToken);\r\n        },\r\n        { scope: \"public_profile,email\" }\r\n      );\r\n    }\r\n  };\r\n\r\n  refreshToken = async () => {\r\n    this.stopRefreahTokenTimer();\r\n    try {\r\n      const user = await agent.Account.refreshToken();\r\n      runInAction(() => this.user = user);\r\n      store.commonStore.setToken(user.token);\r\n      this.startRefreshTokenTimer(user);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  private startRefreshTokenTimer(user: User) {\r\n    const jwtToken = JSON.parse(atob(user.token.split('.')[1]))\r\n    const expires = new Date(jwtToken.exp * 1000)\r\n    const timeout = expires.getTime() - Date.now() - (60 * 1000);\r\n    this.refreshTokenTimeOut = setTimeout(this.refreshToken, timeout);\r\n  }\r\n\r\n\r\n  private stopRefreahTokenTimer() {\r\n    clearTimeout(this.refreshTokenTimeOut);\r\n  }\r\n}\r\n","import { createContext, useContext } from 'react'\nimport ActivityStore from './activityStore'\nimport CommentStore from './commentStore';\nimport CommonStore from './commonStore';\nimport ModalStore from './modalStore';\nimport ProfileStore from './profileStore';\nimport UserStore from './userStore';\n\ninterface Store {\n    activityStore: ActivityStore;\n    commonStore: CommonStore;\n    userStore: UserStore;\n    modalStore: ModalStore;\n    profileStore: ProfileStore;\n    commentStore: CommentStore;\n}\n\nexport const store: Store = {\n    activityStore: new ActivityStore(),\n    commonStore: new CommonStore(),\n    userStore: new UserStore(),\n    modalStore: new ModalStore(),\n    profileStore: new ProfileStore(),\n    commentStore: new CommentStore()\n}\n\nexport const StoreContext = createContext(store);\n\nexport function useStore() {\n    return useContext(StoreContext);\n}","import { makeAutoObservable, reaction } from \"mobx\";\nimport { ServerError } from \"../models/serverError\";\n\nexport default class CommonStore {\n  error: ServerError | null = null;\n  token: string | null = window.localStorage.getItem(\"jwt\");\n  appLoaded: boolean = false;\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.token,\n      (token) => {\n        if (token) {\n          window.localStorage.setItem(\"jwt\", token);\n        } else {\n          window.localStorage.removeItem(\"jwt\");\n        }\n      }\n    );\n  }\n\n  setServerError = (error: ServerError) => {\n    this.error = error;\n  };\n\n  setToken = (token: string | null) => {\n    this.token = token;\n  };\n  setAppLoaded = () => {\n    this.appLoaded = true;\n  };\n}\n","import { makeAutoObservable } from \"mobx\"\n\ninterface Modal {\n    open: boolean;\n    body: JSX.Element | null\n}\n\nexport default class ModalStore {\n  modal: Modal = {\n    open: false,\n    body: null,\n  };\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  openModal = (content: JSX.Element) => {\n    this.modal.open = true;\n    this.modal.body = content;\n  };\n  closeModal = () => {\n    this.modal.open = false;\n    this.modal.body = null;\n  };\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\"\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\n\r\nexport default class CommentStore {\r\n    comments: ChatComment[] = [];\r\n    hubConnection: HubConnection | null = null\r\n\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    createHubConnection = (activityId: string) => {\r\n        if (store.activityStore.selectedActivity) {\r\n            this.hubConnection = new HubConnectionBuilder()\r\n                .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\r\n                    accessTokenFactory: () => store.userStore.user?.token!\r\n                })\r\n                .withAutomaticReconnect()\r\n                .configureLogging(LogLevel.Information)\r\n                .build();\r\n            \r\n            this.hubConnection.start().catch(error => console.log('Error establishing the connection: ', error))\r\n        \r\n            this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\r\n                runInAction(() => {\r\n                    comments.forEach((comment) => {\r\n                      comment.createdAt = new Date(comment.createdAt + 'Z');\r\n                    });\r\n                    this.comments = comments\r\n                });\r\n            })\r\n\r\n            this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\r\n                runInAction(() => {\r\n                    comment.createdAt = new Date(comment.createdAt)\r\n                    this.comments.unshift(comment)\r\n                });\r\n            })\r\n        }\r\n    }\r\n    stopHubConnection = () => {\r\n        this.hubConnection?.stop().catch(error => console.log('Error stopping connection', error))\r\n    }\r\n\r\n    clearComments = () => {\r\n        this.comments = [];\r\n        this.stopHubConnection();\r\n    }\r\n\r\n    addComment = async (values: any) => {\r\n        values.activityId = store.activityStore.selectedActivity?.id;\r\n        try {\r\n            await this.hubConnection?.invoke('SendComment', values);\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { Button, Container, Menu, Image, Dropdown } from \"semantic-ui-react\";\nimport { useStore } from \"../stores/store\";\n\nconst NavBar = () => {\n  const {userStore: {user, logout}} = useStore();\n  return (\n    <Menu inverted fixed=\"top\" >\n      <Container>\n        <Menu.Item as={NavLink} to=\"/\" exact header>\n          <img\n            src=\"/assets/logo.png\"\n            alt=\"logo\"\n            style={{ marginRight: \"10px\" }}\n          />\n          Reactivities\n        </Menu.Item>\n        <Menu.Item as={NavLink} to=\"/activities\" name=\"Activities\" />\n        <Menu.Item as={NavLink} to=\"errors\" name=\"Errors\" />\n        <Menu.Item>\n          <Button\n            positive\n            content=\"Create Activity\"\n            as={NavLink}\n            to=\"/createActivity\"\n          />\n        </Menu.Item>\n        <Menu.Item position=\"right\">\n          <Image src={user?.image || \"assets/user.png\"} avatar spaced=\"right\" />\n          <Dropdown pointing=\"top left\" text={user?.displayName}>\n            <Dropdown.Menu>\n              <Dropdown.Item\n                as={Link}\n                to={`/profiles/${user?.username}`}\n                text=\"My Profile\"\n                icon=\"user\"\n              />\n              <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\n            </Dropdown.Menu>\n          </Dropdown>\n        </Menu.Item>\n      </Container>\n    </Menu>\n  );\n};\n\nexport default observer(NavBar);\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport Calendar from \"react-calendar\";\nimport { Header, Menu } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\n\nconst ActivityFilters = () => {\n  const {\n    activityStore: { predicate, setPredicate },\n  } = useStore();\n\n  return (\n    <>\n      <Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 42 }}>\n        <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\n        <Menu.Item\n          content=\"All Activities\"\n          active={predicate.has(\"all\")}\n          onClick={() => setPredicate(\"all\", \"true\")}\n        />\n        <Menu.Item\n          content=\"I'm going\"\n          active={predicate.has(\"isGoing\")}\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\n        />\n        <Menu.Item\n          content=\"I'm hosting\"\n          active={predicate.has(\"isHost\")}\n          onClick={() => setPredicate(\"isHost\", \"true\")}\n        />\n      </Menu>\n      <Header />\n      <Calendar\n        className=\"react-calendar\"\n        onChange={(date) => setPredicate(\"startDate\", date as Date)}\n        value={predicate.get(\"startDate\") || new Date()}\n      />\n    </>\n  );\n};\n\nexport default observer(ActivityFilters);\n","import { observer } from 'mobx-react-lite';\r\nimport React, { SyntheticEvent } from 'react'\r\nimport { Button, Reveal } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nconst FollowButton = ({ profile }: Props) => {\r\n    const { profileStore, userStore } = useStore();\r\n    const { toggleFollow, loading } = profileStore;\r\n\r\n    if (userStore.user?.username === profile.username) return null;\r\n\r\n    const followHandler = (event: SyntheticEvent, username: string) => {\r\n        event.preventDefault();\r\n        profile.following ? toggleFollow(username, false) : toggleFollow(username, true);\r\n    }\r\n\r\n\r\n    return (\r\n      <Reveal animated=\"move\">\r\n        <Reveal.Content visible style={{ width: \"100%\" }}>\r\n          <Button\r\n            fluid\r\n            color=\"teal\"\r\n            content={\r\n              profile.following ? \"Following\" : \"Not Following\"\r\n            }\r\n          />\r\n        </Reveal.Content>\r\n        <Reveal.Content hidden style={{ width: \"100%\" }}>\r\n          <Button\r\n            fluid\r\n            basic\r\n            color={profile.following ? \"red\" : \"green\"}\r\n            loading={loading}\r\n            content={profile.following ? \"Unfollow\" : \"Follow\"}\r\n            onClick={(event) => followHandler(event, profile.username)}\r\n          />\r\n        </Reveal.Content>\r\n      </Reveal>\r\n    );\r\n}\r\n\r\nexport default observer(FollowButton);","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Icon, Image } from 'semantic-ui-react';\nimport { Profile } from '../../app/models/profile';\nimport FollowButton from './FollowButton';\n\ninterface Props {\n    profile: Profile;\n}\n\nconst ProfileCard = ({ profile }: Props) => {\n    const truncate = (bio: string | undefined) => {\n        if (bio) {\n            return bio.length > 40 ? bio.substring(0, 37) + '...' : bio;\n        }\n    }\n\n    return (\n        <Card as={Link} to={`/profiles/${profile.username}`}>\n            <Image src={profile.image || '/assets/user.png'} />\n            <Card.Content>\n                <Card.Header>{profile.displayName}</Card.Header>\n                <Card.Description>{truncate(profile.bio)}</Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n                <Icon name='user' />\n                {profile.followersCount} {profile.followersCount === 1 ? 'follower' : 'followers'}\n            </Card.Content>\n            <FollowButton profile={profile}/>\n        </Card>\n    )\n}\n\nexport default observer(ProfileCard);","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { List, Image, Popup } from \"semantic-ui-react\";\nimport { Profile } from \"../../../app/models/profile\";\nimport ProfileCard from \"../../Profiles/ProfileCard\";\n\ninterface Props {\n  attendees: Profile[];\n}\n\nconst ActivityListItemAttendee = ({ attendees }: Props) => {\n  const styles = {\n    borderColor: 'orange',\n    borderWidth: 2\n  }\n  return (\n    <List horizontal>\n      {attendees.map((attendee) => (\n          <Popup\n            hoverable\n            key={attendee.username}\n            trigger={\n              <List.Item\n                key={attendee.username}\n                as={Link}\n                to={`/profiles/${attendee.username}`}\n              >\n                <Image\n                  size=\"mini\"\n                  circular\n                  bordered\n                  style={attendee.following ? styles : null}\n                  src={attendee.image || \"/assets/user.png\"}\n                />\n              </List.Item>\n            }\n          >\n            <Popup.Content>\n            <ProfileCard profile={attendee}/>\n            </Popup.Content>\n          </Popup>\n      ))}\n    </List>\n  );\n};\n\nexport default observer(ActivityListItemAttendee);\n","import { format } from \"date-fns\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Accordion, Button, Icon, Item, Label, Segment,  } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/actvity\";\nimport ActivityListIemAttendee from \"./ActivityListIemAttendee\";\n\ninterface Props {\n  activity: Activity;\n}\n\nconst ActivityListItem = ({ activity }: Props) => {\n  const [index] = useState<number>(0);\n  const [activeIndex, setActiveIndex] = useState<boolean>(false)\n\n  const accordianHandle = () => {\n    setActiveIndex(prevState => !prevState)\n  }\n  return (\n    <Segment.Group>\n      <Segment>\n        {activity.isCancelled && (\n          <Label\n            attached=\"top\"\n            color=\"red\"\n            content=\"Cancelled\"\n            style={{ textAlign: \"center\" }}\n          />\n        )}\n        <Item.Group>\n          <Item>\n            <Item.Image\n              style={{ marginBottom: 3 }}\n              size=\"tiny\"\n              src={activity.host?.image || \"/assets/user.png\"}\n            />\n            <Item.Content>\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\n                {activity.title}\n              </Item.Header>\n              <Item.Description>\n                Hosted by{\" \"}\n                <Link to={`/profiles/${activity.host!.username}`}>\n                  {activity.host?.displayName}\n                </Link>\n              </Item.Description>\n              {activity.isHost && (\n                <Item.Description>\n                  <Label basic color=\"orange\">\n                    You are hosting this activity\n                  </Label>\n                </Item.Description>\n              )}\n              {activity.isGoing && !activity.isHost && (\n                <Item.Description>\n                  <Label basic color=\"green\">\n                    You are going to this activity\n                  </Label>\n                </Item.Description>\n              )}\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      <Segment>\n        <span>\n          <Icon name=\"clock\" /> {format(activity.date!, \"dd MMM yyyy h:mm aa\")}\n          <Icon name=\"marker\" /> {activity.venue}\n        </span>\n      </Segment>\n      <Accordion>\n        <Accordion.Title\n          active={activeIndex}\n          index={index}\n          onClick={accordianHandle}\n        >\n          <Icon name=\"address card\" />\n          <span>People going: {activity.attendees.length}</span>\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex}>\n          <Segment secondary>\n            <ActivityListIemAttendee attendees={activity.attendees!} />\n          </Segment>\n        </Accordion.Content>\n      </Accordion>\n      <Segment clearing>\n        <span>{activity.description}</span>\n        <Button\n          as={Link}\n          to={`/activities/${activity.id}`}\n          color=\"teal\"\n          floated=\"right\"\n          content=\"View\"\n        />\n      </Segment>\n    </Segment.Group>\n  );\n};\n\nexport default observer(ActivityListItem);\n","import { observer } from \"mobx-react-lite\";\nimport React, { Fragment } from \"react\";\n\nimport { Header} from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityListItem from \"./AcivityListItem\";\n\n\nconst ActivityList = () => {\n  const { activityStore } = useStore();\n  const { groupedActivities } = activityStore;\n\n  return (\n    <>\n      {groupedActivities.map(([group, activities]) => (\n        <Fragment key={group}>\n          <Header sub color=\"teal\">\n            {group}\n          </Header>\n          {activities.map((activity) => (\n            <ActivityListItem key={activity.id} activity={activity} />\n          ))}\n        </Fragment>\n      ))}\n    </>\n  );\n};\n\nexport default observer(ActivityList);\n","import { Button, Placeholder, Segment } from \"semantic-ui-react\"\r\n\r\ninterface Props {\r\n    margin: number\r\n}\r\n\r\nconst ActivityListItemPlaceHolder = ({margin} : Props) => {\r\n    return <>\r\n        <Placeholder fluid style={{ marginTop: margin }} />\r\n        <Segment.Group>\r\n            <Segment style={{ minHeight: 110 }}>\r\n                <Placeholder>\r\n                    <Placeholder.Header image>\r\n                        <Placeholder.Line/>\r\n                        <Placeholder.Line/>\r\n                    </Placeholder.Header>\r\n                    <Placeholder.Paragraph>\r\n                        <Placeholder.Line />\r\n                    </Placeholder.Paragraph>\r\n                </Placeholder>\r\n            </Segment>\r\n            <Segment>\r\n                <Placeholder>\r\n                    <Placeholder.Line />\r\n                </Placeholder>\r\n            </Segment>\r\n            <Segment secondary style={{ minHeight: 30 }} />\r\n            <Segment clearing>\r\n                <Button disabled color='blue' floated='right' content='View'/>\r\n            </Segment>\r\n        </Segment.Group>\r\n    </>\r\n}\r\n\r\nexport default ActivityListItemPlaceHolder;\r\n","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect, useRef, useState} from \"react\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport {  Grid, Loader, Rail, Ref, Segment, Sticky } from \"semantic-ui-react\";\nimport { PagingParams } from \"../../../app/models/pagination\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityFilters from \"./ActivityFilters\";\nimport ActivityList from \"./ActivityList\";\nimport ActivityListItemPlaceHolder from \"./ActivityListItemPlaceHolder\";\n\nconst ActivityDashboard = () => {\n  const contextRef = useRef<any>();\n  const { activityStore } = useStore();\n  const { loadActivities, activityRegistry, setPagingParams, pagination } = activityStore;\n  const [loadingNext, setLoadingNext] = useState<boolean>(false);\n  \n  useEffect(() => {\n    if(activityRegistry.size <= 1) loadActivities();\n  }, [loadActivities, activityRegistry.size]);\n\n  \n  const getNextHandler = () => {\n    setLoadingNext(true)\n    setPagingParams(new PagingParams(pagination!.currentPage + 1))\n    loadActivities().then(() => setLoadingNext(false));\n  }\n  \n\n  \n  return (\n    <Grid>\n      <Grid.Column width=\"10\">\n        <Ref innerRef={contextRef}>\n          <Segment basic>\n            {activityStore.loadingInitial && !loadingNext ? (\n              <>\n                <ActivityListItemPlaceHolder margin={14}/>\n                <ActivityListItemPlaceHolder margin={45}/>\n                <ActivityListItemPlaceHolder margin={45}/>\n                </>\n            ) : (\n            <InfiniteScroll\n              pageStart={0}\n              loadMore={getNextHandler}\n              hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages}\n              initialLoad={false}\n            >\n            <ActivityList />\n            </InfiniteScroll>\n                \n            )}\n\n            <Rail position=\"right\">\n              <Sticky\n                context={contextRef}\n                offset={42}\n                styleElement={{ zIndex: 0 }}\n              >\n                <ActivityFilters/>\n              </Sticky>\n            </Rail>\n          </Segment>\n        </Ref>\n      </Grid.Column>\n      <Grid.Column width={10}>\n        <Loader active={loadingNext}/>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default observer(ActivityDashboard);\n","import { useField } from 'formik';\nimport React from 'react';\nimport { Form, Label } from 'semantic-ui-react';\n\ninterface Props {\n    placeholder: string;\n    name: string;\n    label?: string;\n    type?: string\n}\n\nconst MyTextInput = (props: Props) => {\n    const [field, meta] = useField(props.name);\n    return (\n        <Form.Field error={meta.touched && !!meta.error}>\n            <label>{props.label}</label>\n            <input {...field} {...props} />\n            {meta.touched && meta.error ? (\n                <Label basic color='red'> {meta.error}</Label>\n            ) : null}\n        </Form.Field>\n    )\n}\n\nexport default MyTextInput;","import { ErrorMessage, Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Button, Header, Label } from \"semantic-ui-react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\n\nconst LoginForm = () => {\n  const { userStore } = useStore();\n  return (\n    <Formik\n      initialValues={{ email: \"\", password: \"\", error: null }}\n      onSubmit={(values, { setErrors }) =>\n        userStore\n          .login(values)\n          .catch((error) => setErrors({ error: \"Invalid Email or Password\" }))\n      }\n    >\n      {({ handleSubmit, isSubmitting, errors }) => (\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoCapitalize=\"off\">\n          <Header as='h2' content='Login to Reactivities' color='blue' textAlign='center'/>\n          <MyTextInput name=\"email\" placeholder=\"Email\" type=\"email\" />\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\n          <ErrorMessage\n            name=\"error\"\n            render={() => (\n              <Label\n                style={{ marginBottom: 10 }}\n                basic\n                color=\"red\"\n                content={errors.error}\n              />\n            )}\n          />\n          <Button\n            loading={isSubmitting}\n            positive\n            content=\"Login\"\n            type=\"submit\"\n            fluid\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default observer(LoginForm);\n","import React from 'react';\nimport { Message } from 'semantic-ui-react';\n\ninterface Props {\n    errors: any;\n}\n\nconst ValidationErrors = ({errors} : Props) => {\n    return (\n        <Message error>\n            {errors && (\n                <Message.List>\n                    {errors.map((err: any, key: any) => (\n                        <Message.Item key={key}>{err}</Message.Item>\n                    ))}\n                </Message.List>\n            )}\n        </Message>\n    );\n}\n\n\n\nexport default ValidationErrors;","import { ErrorMessage, Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Button, Header } from \"semantic-ui-react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\nimport * as Yup from \"yup\";\nimport ValidationErrors from \"../errors/ValidationErrors\";\n\nconst RegisterForm = () => {\n  const { userStore } = useStore();\n  return (\n    <Formik\n      initialValues={{\n        displayName: \"\",\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        error: null,\n      }}\n      onSubmit={(values, { setErrors }) =>\n        userStore\n          .register(values)\n          .catch((error) => setErrors({error}))\n      }\n      validationSchema={Yup.object({\n        displayName: Yup.string().required(),\n        username: Yup.string().required(),\n        email: Yup.string().required().email(),\n        password: Yup.string().required(),\n        confirmPassword: Yup.string().test(\n          \"passwords-match\",\n          \"Passwords must match\",\n          function (value) {\n            return this.parent.password === value;\n          }\n        ),\n      })}\n    >\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\n        <Form className=\"ui form error\" onSubmit={handleSubmit} autoCapitalize=\"off\">\n          <Header\n            as=\"h2\"\n            content=\"Register to Reactivities\"\n            color=\"blue\"\n            textAlign=\"center\"\n          />\n          <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\n          <MyTextInput name=\"username\" placeholder=\"Username\" />\n          <MyTextInput name=\"email\" placeholder=\"Email\" type=\"email\" />\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\n          <MyTextInput name=\"confirmPassword\" placeholder=\"Confirm Password\" type=\"password\" />\n          <ErrorMessage\n            name=\"error\"\n            render={() => (\n                <ValidationErrors errors={errors.error}/>\n            )}\n          />\n          <Button\n            disabled={!isValid || !dirty || isSubmitting}\n            loading={isSubmitting}\n            positive\n            content=\"Sign Up!\"\n            type=\"submit\"\n            fluid\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default observer(RegisterForm);\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Header, Segment, Image, Button, Divider, Icon } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"../users/LoginForm\";\r\nimport RegisterForm from \"../users/RegisterForm\";\r\n\r\nconst HomePage = () => {\r\n  const { userStore, modalStore } = useStore();\r\n\r\n  return (\r\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n      <Container text>\r\n        <Header as=\"h1\" inverted>\r\n          <Image\r\n            size=\"massive\"\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginBottom: 12 }}\r\n          />\r\n          Reactivities\r\n        </Header>\r\n        {userStore.isLoggedIn ? (\r\n          <>\r\n            <Header as=\"h2\" inverted content=\"Welcome to Reactivities\"></Header>\r\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\r\n              Go to activities\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<LoginForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Login\r\n            </Button>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<RegisterForm/>)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n                Register\r\n            </Button>\r\n              <Divider horizontal inverted content=\"Or\" />\r\n              <Button\r\n                loading={userStore.fbLoading}\r\n                size='huge'\r\n                inverted\r\n                color='facebook'\r\n                onClick={userStore.facebookLogin}><Icon name='facebook' size='large'/>Login With Facebook</Button>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(HomePage);\r\n","import React from 'react'\nimport { Dimmer, Loader } from 'semantic-ui-react'\n\ninterface Props {\n    inverted?: boolean;\n    content?: string;\n}\n\nexport default function LoadingComponent({ inverted = true, content = \"Loading...\" }: Props) {\n    return (\n        <Dimmer active={true} inverted={inverted}>\n            <Loader content={content}/>\n        </Dimmer>\n    )\n};","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\n\ninterface Props {\n    placeholder: string;\n    name: string;\n    rows: number;\n  label?: string;\n}\n\nconst MyTextArea = (props: Props) => {\n  const [field, meta] = useField(props.name);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <textarea {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {\" \"}\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n};\n\nexport default MyTextArea;\n","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label, Select } from \"semantic-ui-react\";\n\ninterface Props {\n  placeholder: string;\n    name: string;\n    options: any;\n  label?: string;\n}\n\nconst MySelectInput = (props: Props) => {\n  const [field, meta, helpers] = useField(props.name);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n          <Select\n              clearable\n              options={props.options}\n              value={field.value || null}\n              onChange={(_, data) => helpers.setValue(data.value)}\n              onBlur={() => helpers.setTouched(true)}\n              placeholder={props.placeholder}/>\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {\" \"}\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n};\n\nexport default MySelectInput;\n","export const categoryOptions = [\n  { text: \"Drinks\", value: \"drinks\" },\n  { text: \"Culture\", value: \"culture\" },\n  { text: \"Film\", value: \"film\" },\n  { text: \"Food\", value: \"food\" },\n  { text: \"Music\", value: \"music\" },\n  { text: \"Travel\", value: \"travel\" }\n];","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\n\nconst MyDateInput = (props: Partial<ReactDatePickerProps>) => {\n  const [field, meta, helpers] = useField(props.name!);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <DatePicker\n        {...field}\n        {...props}\n        selected={(field.value && new Date(field.value)) || null}\n        onChange={(value) => helpers.setValue(value)}\n      />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {\" \"}\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n};\n\nexport default MyDateInput;\n","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Header, Segment } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../../app/Layout/LoadingComponent\";\nimport { useStore } from \"../../../app/stores/store\";\nimport { v4 as uuid } from \"uuid\";\nimport { Formik, Form} from \"formik\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\nimport { categoryOptions } from \"../../../app/common/options/CategoryOptions\";\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\nimport { ActivityFormValues } from \"../../../app/models/actvity\";\n\nconst ActivityForm = () => {\n  const { activityStore } = useStore();\n  const {\n    updateActivity,\n    createActivity,\n    loadActivity,\n    loadingInitial,\n  } = activityStore;\n  const { id } = useParams<{ id: string }>();\n  const history = useHistory();\n  const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\n\n  const validationSchema = Yup.object({\n    title: Yup.string().required(\"The activity title is required\"),\n    description: Yup.string().required(\"The activity description is required\"),\n    category: Yup.string().required(),\n    date: Yup.string().required('Date is required').nullable(),\n    venue: Yup.string().required(),\n    city: Yup.string().required(),\n  });\n\n  useEffect(() => {\n    if (id) loadActivity(id).then((activity) => setActivity(new ActivityFormValues(activity)));\n  }, [id, loadActivity]);\n\n  const submitHandler = (activity: ActivityFormValues) => {\n\n    if (!activity.id) {\n      let newActivity = {...activity, id: uuid()}\n      createActivity(newActivity).then(() => history.push(`/activities/${newActivity.id}`));\n    }\n    else updateActivity(activity).then(() =>\n    history.push(`/activities/${activity.id}`)\n    );\n  };\n\n\n  if (loadingInitial) return <LoadingComponent content=\"Loading Activity...\" />;\n\n  return (\n    <Segment clearing>\n      <Header content=\"Activity Details\" color=\"teal\" />\n      <Formik\n        validationSchema={validationSchema}\n        enableReinitialize\n        initialValues={activity}\n        onSubmit={(values) => submitHandler(values)}\n      >\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\n            <MyTextInput name=\"title\" placeholder=\"Title\" />\n            <MyTextArea rows={3} placeholder=\"Description\" name=\"description\" />\n            <MySelectInput\n              options={categoryOptions}\n              name=\"category\"\n              placeholder=\"Category\"\n            />\n            <MyDateInput\n              placeholderText=\"Date\"\n              name=\"date\"\n              showTimeSelect\n              timeCaption=\"time\"\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\n            />\n            <Header content=\"Location Details\" color=\"teal\" />\n            <MyTextInput name=\"city\" placeholder=\"City\" />\n            <MyTextInput name=\"venue\" placeholder=\"Venue\" />\n            <Button.Group floated=\"right\">\n              <Button\n                as={Link}\n                to=\"/activities\"\n                type=\"button\"\n                content=\"Cancel\"\n              />\n              <Button.Or />\n              <Button\n                disabled={isSubmitting || !dirty || !isValid}\n                loading={isSubmitting}\n                positive\n                type=\"submit\"\n                content=\"Submit\"\n              />\n            </Button.Group>\n          </Form>\n        )}\n      </Formik>\n    </Segment>\n  );\n};\n\nexport default observer(ActivityForm);\n","import { Formik, Form, Field, FieldProps } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Segment, Header, Comment, Loader } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\nimport * as Yup from 'yup'\nimport { formatDistanceToNow } from \"date-fns\";\n\ninterface Props {\n  activityId: string;\n}\n\nconst ActivityDetailsChat = ({ activityId }: Props) => {\n  const { commentStore } = useStore();\n\n  useEffect(() => {\n    if (activityId) commentStore.createHubConnection(activityId);\n    return () => {\n      commentStore.clearComments();\n    };\n  }, [commentStore, activityId]);\n\n  const validationSchema = Yup.object({\n    body: Yup.string().required(\"Please add text to the comment\")\n  })\n\n  return (\n    <>\n      <Segment\n        textAlign=\"center\"\n        attached=\"top\"\n        inverted\n        color=\"teal\"\n        style={{ border: \"none\" }}\n      >\n        <Header>Chat about this event</Header>\n      </Segment>\n      <Segment attached clearing>\n        <Formik\n          onSubmit={(values, { resetForm }) =>\n            commentStore.addComment(values).then(() => resetForm())\n          }\n          initialValues={{ body: \"\" }}\n          validationSchema={validationSchema}\n        >\n          {({ isSubmitting, isValid, handleSubmit }) => (\n            <Form className=\"ui form\">\n              <Field name=\"body\">\n                {(props: FieldProps) => (\n                  <div style={{ position: \"relative\" }}>\n                    <Loader active={isSubmitting} />\n                    <textarea\n                      placeholder=\"Hit ENTER to submit, SHIFT ENTER for new line\"\n                      rows={2}\n                      {...props.field}\n                      onKeyPress={(event) => {\n                        if (event.key === \"Enter\" && event.shiftKey) return;\n                        if (event.key === \"Enter\" && !event.shiftKey) {\n                          event.preventDefault();\n                          isValid && handleSubmit();\n                        }\n                      }}\n                    />\n                  </div>\n                )}\n              </Field>\n            </Form>\n          )}\n        </Formik>\n        <Comment.Group>\n          {commentStore.comments.map((comment) => (\n            <Comment key={comment.id}>\n              <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\n              <Comment.Content>\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\n                  {comment.displayName}\n                </Comment.Author>\n                <Comment.Metadata>\n                  <div>{formatDistanceToNow(comment.createdAt)}</div>\n                </Comment.Metadata>\n                <Comment.Text stye={{ whiteSpace: \"pre-wrap\" }}>\n                  {comment.body}\n                </Comment.Text>\n              </Comment.Content>\n            </Comment>\n          ))}\n        </Comment.Group>\n      </Segment>\n    </>\n  );\n};\n\nexport default observer(ActivityDetailsChat);\n","import { format } from \"date-fns\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/actvity\";\nimport { useStore } from \"../../../app/stores/store\";\n\nconst activityImageStyle = {\n  filter: \"brightness(30%)\",\n};\n\nconst activityImageTextStyle = {\n  position: \"absolute\",\n  bottom: \"5%\",\n  left: \"5%\",\n  width: \"100%\",\n  height: \"auto\",\n  color: \"white\",\n};\n\ninterface Props {\n  activity: Activity;\n}\n\nconst ActivityDetailsHeader = ({ activity }: Props) => {\n  const {\n    activityStore: { updateAttendance, loading, cancelActivityToggle },\n  } = useStore();\n  return (\n    <Segment.Group>\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\n        {activity.isCancelled && (\n          <Label\n            style={{ position: \"absolute\", zIndex: 1000, left: -14, top: 20 }}\n            ribbon\n            color=\"red\"\n            content=\"Cancelled\"\n          />\n        )}\n        <Image\n          src={`/assets/categoryImages/${activity.category}.jpg`}\n          fluid\n          style={activityImageStyle}\n        />\n        <Segment style={activityImageTextStyle} basic>\n          <Item.Group>\n            <Item>\n              <Item.Content>\n                <Header\n                  size=\"huge\"\n                  content={activity.title}\n                  style={{ color: \"white\" }}\n                />\n                <p>{format(activity.date!, \"dd MMM yyyy\")}</p>\n                <p>\n                  Hosted by{\" \"}\n                  <strong>\n                    <Link to={`/profiles/${activity.host?.username}`}>\n                      {activity.host?.displayName}\n                    </Link>\n                  </strong>\n                </p>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n      </Segment>\n      <Segment clearing attached=\"bottom\">\n        {activity.isHost ? (\n          <>\n            <Button\n              color={activity.isCancelled ? \"green\" : \"red\"}\n              floated=\"left\"\n              basic\n              content={\n                activity.isCancelled\n                  ? \"Re-activate Activity\"\n                  : \"Cancel Activity\"\n              }\n              onClick={cancelActivityToggle}\n              loading={loading}\n            />\n            <Button\n              disabled={activity.isCancelled}\n              as={Link}\n              to={`/manage/${activity.id}`}\n              size=\"small\"\n              color=\"orange\"\n              floated=\"right\"\n            >\n              Manage Event\n            </Button>\n          </>\n        ) : (\n          <Button\n            disabled={activity.isCancelled}\n            loading={loading}\n            basic\n            color={activity.isGoing ? \"red\" : \"green\"}\n            onClick={updateAttendance}\n            size=\"small\"\n          >\n            {activity.isGoing ? \"Cancel Attendance\" : \"Join Activity\"}\n          </Button>\n        )}\n      </Segment>\n    </Segment.Group>\n  );\n};\n\nexport default observer(ActivityDetailsHeader);\n","import { format } from \"date-fns\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/actvity\";\n\n\ninterface Props {\n  activity: Activity;\n}\n\nconst ActivityDetailsInfo = ({ activity }: Props) => {\n  return (\n    <Segment.Group>\n      <Segment attached=\"top\">\n        <Grid>\n          <Grid.Column width={1}>\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <p>{activity.description}</p>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <span>{format(activity.date!, 'dd MMM yy h:mm a')}</span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={11}>\n            <span>\n              {activity.venue}, {activity.city}\n            </span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n    </Segment.Group>\n  );\n};\n\n\nexport default observer(ActivityDetailsInfo);","import React from \"react\";\nimport { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react-lite\";\nimport { Activity } from \"../../../app/models/actvity\";\n\ninterface Props {\n  activity: Activity\n}\n\nconst ActivityDetailsSidebar = ({ activity: {attendees, host} }: Props) => {\n  if (!attendees) return null\n  return (\n    <>\n      <Segment\n        textAlign=\"center\"\n        style={{ border: \"none\" }}\n        attached=\"top\"\n        secondary\n        inverted\n        color=\"teal\"\n      >\n        {attendees.length} {attendees.length === 1 ? \"Person\" : \"People\"} going\n      </Segment>\n      <Segment attached>\n        <List relaxed divided>\n          {attendees.map((attendee) => (\n            <Item style={{ position: \"relative\" }} key={attendee.username}>\n            {attendee.username === host?.username &&\n              <Label\n                style={{ position: \"absolute\" }}\n                color=\"orange\"\n                ribbon=\"right\"\n              >\n                Host\n              </Label>}\n              <Image size=\"tiny\" src={attendee.image ||\"/assets/user.png\"} />\n              <Item.Content verticalAlign=\"middle\">\n                <Item.Header as=\"h3\">\n                  <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\n                </Item.Header>\n                <Item.Extra style={{ color: \"orange\" }}>{attendee.following && \"Following\" }</Item.Extra>\n              </Item.Content>\n            </Item>\n          ))}\n        </List>\n      </Segment>\n    </>\n  );\n};\n\nexport default observer(ActivityDetailsSidebar);\n","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Grid, GridColumn} from \"semantic-ui-react\";\nimport LoadingComponent from \"../../../app/Layout/LoadingComponent\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityDetailsChat from \"./ActivityDetailsChat\";\nimport ActivityDetailsHeader from \"./ActivityDetailsHeader\";\nimport ActivityDetailsInfo from \"./ActivityDetailsInfo\";\nimport ActivityDetailsSidebar from \"./ActivityDetailsSidebar\";\n\n\nconst ActivityDetails = () => {\n  const {id} = useParams<{id: string}>();\n  const { activityStore } = useStore();\n  const { selectedActivity, loadActivity, loadingInitial, clearSelectedActivity } = activityStore;\n  \n  useEffect(() => {\n    if (id) loadActivity(id)\n    return () => clearSelectedActivity();\n  }, [id, loadActivity, clearSelectedActivity]);\n  \n  if (loadingInitial || !selectedActivity) return <LoadingComponent />;\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <ActivityDetailsHeader activity={selectedActivity} />\n        <ActivityDetailsInfo activity={selectedActivity} />\n        <ActivityDetailsChat activityId={selectedActivity.id}/>\n      </Grid.Column>\n      <GridColumn width={6}>\n        <ActivityDetailsSidebar activity={selectedActivity}/>\n      </GridColumn>\n    </Grid>\n  );\n}\n\nexport default observer(ActivityDetails);","import React, { useState } from \"react\";\nimport { Button, Header, Segment } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport ValidationErrors from \"./ValidationErrors\";\n\nexport default function TestErrors() {\n  const baseUrl = process.env.REACT_APP_API_URL;\n  const [errors, setErrors] = useState(null);\n\n  function handleNotFound() {\n    axios\n      .get(baseUrl + \"buggy/not-found\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleBadRequest() {\n    axios\n      .get(baseUrl + \"buggy/bad-request\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleServerError() {\n    axios\n      .get(baseUrl + \"buggy/server-error\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleUnauthorised() {\n    axios\n      .get(baseUrl + \"buggy/unauthorised\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleBadGuid() {\n    axios\n      .get(baseUrl + \"activities/notaguid\")\n      .catch((err) => console.log(err));\n  }\n\n  function handleValidationError() {\n    axios.post(baseUrl + \"activities\", {}).catch((err) => setErrors(err));\n  }\n\n  return (\n    <>\n      <Header as=\"h1\" content=\"Test Error component\" />\n      <Segment>\n        <Button.Group widths=\"7\">\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\n          <Button\n            onClick={handleBadRequest}\n            content=\"Bad Request\"\n            basic\n            primary\n          />\n          <Button\n            onClick={handleValidationError}\n            content=\"Validation Error\"\n            basic\n            primary\n          />\n          <Button\n            onClick={handleServerError}\n            content=\"Server Error\"\n            basic\n            primary\n          />\n          <Button\n            onClick={handleUnauthorised}\n            content=\"Unauthorised\"\n            basic\n            primary\n          />\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\n        </Button.Group>\n      </Segment>\n      {errors &&\n        <ValidationErrors errors={errors} />}\n    </>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\n\nconst NotFound = () => {\n  return (\n    <Segment placeholder>\n      <Header icon>\n        <Icon name=\"search\" />\n        Oops - Looks like theres nothing here\n      </Header>\n      <Segment.Inline>\n        <Button as={Link} to=\"/activities\" primary>\n          Take me back!\n        </Button>{\" \"}\n      </Segment.Inline>\n    </Segment>\n  );\n};\n\nexport default NotFound;\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Container, Header, Segment } from 'semantic-ui-react';\nimport { useStore } from '../../app/stores/store';\n\nconst ServerError = () => {\n    const { commonStore } = useStore();\n    return (\n        <Container>\n            <Header as='h1' content='Server Error'/>\n            <Header sub as='h5' color='red' content={commonStore.error?.message} />\n            {commonStore.error?.details &&\n                <Segment>\n                <Header as='h4' content='Stack trace' color='teal' />\n                <code style={{ marginTop: '10px' }}>{commonStore.error.details}</code>\n                </Segment>}\n            \n        </Container>\n    )\n}\n\n\n\nexport default observer(ServerError);","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Modal } from 'semantic-ui-react';\nimport { useStore } from '../../stores/store';\n\n\nconst ModalContainer = () => {\n    const { modalStore } = useStore();\n\n    return (\n        <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\n            <Modal.Content>\n                {modalStore.modal.body}\n            </Modal.Content>\n        </Modal>\n    )\n}\n\n\nexport default observer(ModalContainer);","\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\nimport * as Yup from 'yup';\nimport { Form, Formik } from \"formik\";\n\n\ninterface Props {\n  setEditMode: (editMode: boolean) => void;\n}\n\nconst ProfileDescription = ({setEditMode}:Props) => {\n    const { profileStore: {profile, updateProfile} } = useStore();\n    \n    const validationSchema = Yup.object({\n        displayName: Yup.string().required('A Display Name is Required')\n    })\n\n  return (\n    <Formik\n      initialValues={{\n        displayName: profile?.displayName,\n        bio: profile?.bio,\n      }}\n      onSubmit={(values) => {\n        updateProfile(values).then(() => {\n          setEditMode(false);\n        });\n      }}\n      validationSchema={validationSchema}\n    >\n      {({ isSubmitting, isValid, dirty }) => (\n        <Form className=\"ui form\" >\n          <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\n          <MyTextArea placeholder=\"Add your Bio\" name=\"bio\" rows={5} />\n          <Button\n            loading={isSubmitting}\n            positive\n            content=\"Update Profile\"\n            type=\"submit\"\n            floated=\"right\"\n            disabled={!isValid || !dirty}\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default observer(ProfileDescription);\n","import { observer } from 'mobx-react-lite';\nimport React, { useState } from 'react';\nimport { Button, Grid, Header, Tab } from 'semantic-ui-react';\nimport { useStore } from '../../app/stores/store';\nimport ProfileEdit from './ProfileEdit';\n\nconst ProfileAbout = () => {\n    const { profileStore: { isCurrentUser, profile } } = useStore();\n    const [editMode, setEditMode] = useState<boolean>(false);\n\n    return (\n        <Tab.Pane>\n            <Grid>\n                <Grid.Column width='16'>\n                    <Header floated='left' icon='user' content={`About ${profile?.displayName}`} />\n                    {isCurrentUser && (\n                        <Button floated='right' basic content={editMode ? 'Cancel' : 'Edit Profile'}\n                            onClick={() => setEditMode(!editMode)}/>\n                    )}\n                </Grid.Column>\n                <Grid.Column width='16'>\n                    {editMode ? <ProfileEdit setEditMode={setEditMode} /> :\n                        <span style={{ whiteSpace: 'pre-wrap' }}>{profile?.bio}</span>}\n                </Grid.Column>\n            </Grid>\n        </Tab.Pane>\n    )\n}\n\nexport default observer(ProfileAbout)","import React from \"react\";\r\nimport { Card, Image } from \"semantic-ui-react\";\r\nimport { UserActivity } from \"../../../app/models/profile\";\r\nimport { format } from \"date-fns\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  activity: UserActivity;\r\n}\r\n\r\nconst ProfileActivitiesCard = ({activity} : Props) => {\r\n\r\n  return (\r\n    <Card as={Link} to={`/activities/${activity.id}`}>\r\n      <Image src={`/assets/categoryImages/${activity.category}.jpg`} style={{minHeight: 100, objectFit: 'cover'}}/>\r\n      <Card.Content>\r\n        <Card.Header textAlign='center'>{activity.title}</Card.Header>\r\n        <Card.Meta textAlign='center'>\r\n          <div>{format(new Date(activity.date), 'do LLL')}</div>\r\n          <div>{format(new Date(activity.date), 'h:mm a')}</div>\r\n        </Card.Meta>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProfileActivitiesCard;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Card, Tab } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ProfileActivitiesCard from './ProfileActivitiesCard';\r\n\r\n\r\nconst ProfileActivityLayout = () => {\r\n    \r\n    const {profileStore: {loadingActivities, userActivites}} = useStore();\r\n    \r\n    return (<Tab.Pane loading={loadingActivities}>\r\n        <Card.Group itemsPerRow={4}>\r\n            {userActivites.map(activity => <ProfileActivitiesCard key={activity.id} activity={activity}/>)}\r\n        </Card.Group>\r\n        \r\n        </Tab.Pane>\r\n)\r\n}\r\n\r\nexport default observer(ProfileActivityLayout);","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Tab } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ProfileActivityLayout from './ProfileActivityLayout';\r\n\r\n\r\n\r\nconst ProfileActivities = () => {\r\n    const { profileStore: { setActivityTab, activityTab } } = useStore();\r\n\r\n    const panes = [\r\n      { menuItem: \"Future Events\", render: () => <ProfileActivityLayout /> },\r\n      { menuItem: \"Past Events\", render: () => <ProfileActivityLayout /> },\r\n      {\r\n        menuItem: \"Events I'm Hosting\",\r\n        render: () => <ProfileActivityLayout />,\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <Tab.Pane>\r\n            <Tab\r\n          panes={panes}\r\n          onTabChange={(_, data) => setActivityTab(+data.activeIndex!)}\r\n          activeIndex={activityTab}\r\n        />\r\n      </Tab.Pane>\r\n    );\r\n}\r\n\r\nexport default observer(ProfileActivities);","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Card, Grid, Header, Tab } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileCard from './ProfileCard';\r\n\r\n\r\nconst ProfileFollowing = () => {\r\n    const {\r\n      profileStore: {loadingFollow, followings, profile, activeTab },\r\n    } = useStore();\r\n\r\n\r\n\r\n    return (\r\n      <Tab.Pane loading={loadingFollow}>\r\n        <Grid>\r\n          <Grid.Column width={16}>\r\n            <Header\r\n              floated=\"left\"\r\n              icon=\"user\"\r\n              content={activeTab === 3 ? `${profile?.displayName}'s Followers` : `People following ${profile?.displayName}` }\r\n            />\r\n          </Grid.Column>\r\n          <Grid.Column width={16}>\r\n            <Card.Group itemsPerRow={4}>\r\n              {followings.map((profile) => (\r\n                <ProfileCard key={profile.username} profile={profile} />\r\n              ))}\r\n            </Card.Group>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Tab.Pane>\r\n    );\r\n}\r\n\r\n\r\nexport default observer(ProfileFollowing);","import React from \"react\";\nimport { Cropper } from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\n\ninterface Props {\n  imagePreview: string;\n  setCropper: (cropper: Cropper) => void;\n}\n\nconst PhotoWidgetCropper = ({ imagePreview, setCropper }: Props) => {\n  return (\n    <Cropper\n      src={imagePreview}\n      style={{ height: 200, width: \"100%\" }}\n      initialAspectRatio={1}\n      aspectRatio={1}\n      preview=\".img-preview\"\n      guides={false}\n      viewMode={1}\n      autoCropArea={1}\n      background={false}\n      onInitialized={(cropper) => setCropper(cropper)}\n    />\n  );\n};\n\nexport default PhotoWidgetCropper;\n","import React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { Header, Icon } from \"semantic-ui-react\";\n\ninterface Props {\n  setFiles: (files: any) => void;\n}\n\nconst PhotoWidgetDropzone = ({ setFiles }: Props) => {\n  const dzStyles = {\n    border: \"dashed 3px #eee\",\n    borderColor: \"#eee\",\n    borderRadius: \"5px\",\n    paddingTop: \"30px\",\n    textAlign: \"center\" as \"center\",\n    height: 200,\n  };\n\n  const dzActive = {\n    borderColor: \"green\",\n  };\n\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      setFiles(\n        acceptedFiles.map((file: any) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          })\n        )\n      );\n    },\n    [setFiles]\n  );\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  return (\n    <div\n      {...getRootProps()}\n      style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}\n    >\n      <input {...getInputProps()} />\n      <Icon name='upload' size='huge' />\n      <Header content='Drop image here' />\n    </div>\n  );\n};\n\nexport default PhotoWidgetDropzone;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Container,\n  Grid,\n  Header,\n} from \"semantic-ui-react\";\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\n\ninterface Props {\n  loading: boolean,\n  uploadPhoto: (file:Blob) => void\n}\n\nconst PhotoUploadWidget = ({loading, uploadPhoto} : Props) => {\n  const [files, setFiles] = useState<any>([]);\n  const [cropper, setCropper] = useState<Cropper>();\n\n  function onCrop() {\n    if (cropper) {\n      cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!));\n    }\n  }\n\n  useEffect(() => {\n    return () => {\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\n    };\n  }, [files]);\n\n  return (\n    <Grid>\n      {files && files.length > 0 && (\n        <>\n          <Grid.Column width={1} />\n          <Grid.Column width={4}>\n            <Header sub color=\"teal\" content=\"Resize Image\" />\n            <PhotoWidgetCropper\n              setCropper={setCropper}\n              imagePreview={files[0].preview}\n            />\n          </Grid.Column>\n          <Grid.Column width={4} />\n          <Grid.Column width={6}>\n            <Header sub color=\"teal\" content=\"Preview & Upload\" />\n            <>\n              <Container textAlign=\"center\">\n                <div\n                  className=\"img-preview\"\n                  style={{ minHeight: 200, overflow: \"hidden\" }}\n                />\n              </Container>\n            </>\n          </Grid.Column>\n          <Grid.Row centered>\n            <Button.Group>\n              <Button onClick={() => setFiles([])} disabled={loading} icon=\"trash alternate\" />\n              <Button onClick={onCrop} positive loading={loading} icon=\"check\" />\n            </Button.Group>\n          </Grid.Row>\n        </>\n      )}\n\n      {files.length === 0 && (\n        <Grid.Column width={6}>\n          <Header sub color=\"teal\" content=\"Add Photo\" />\n          <PhotoWidgetDropzone setFiles={setFiles} />\n        </Grid.Column>\n      )}\n    </Grid>\n  );\n};\n\nexport default PhotoUploadWidget;\n","import React, { SyntheticEvent } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { useState } from \"react\";\nimport { Card, Header, Tab, Image, Grid, Button } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\nimport { Photo } from \"../../app/models/profile\";\n\nconst ProfilePhotos = () => {\n  const {\n    profileStore: {\n      isCurrentUser,\n      profile,\n      uploadPhoto,\n      uploading,\n      loading,\n      setMainPhoto,\n      deletePhoto\n    },\n  } = useStore();\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\n  const [target, setTarget] = useState(\"\");\n\n  function setMainPhotoHandler(\n    photo: Photo,\n    event: SyntheticEvent<HTMLButtonElement>\n  ) {\n    setTarget(event.currentTarget.name);\n    setMainPhoto(photo);\n  }\n  function deletePhotoHandler(\n    photo: Photo,\n    event: SyntheticEvent<HTMLButtonElement>\n  ) {\n    setTarget(event.currentTarget.name);\n    deletePhoto(photo);\n  };\n\n  function photoUploadHandler(file: Blob) {\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\n  }\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\n          {isCurrentUser && (\n            <Button\n              floated=\"right\"\n              basic\n              size=\"small\"\n              content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\n              color={addPhotoMode ? \"red\" : \"green\"}\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width={16}>\n          {addPhotoMode ? (\n            <PhotoUploadWidget\n              uploadPhoto={photoUploadHandler}\n              loading={uploading}\n            />\n          ) : (\n            <Card.Group itemsPerRow={4}>\n              {profile!.photos?.map((photo) => (\n                <Card key={photo.id}>\n                  <Image src={photo.url} />\n                  {isCurrentUser && (\n                    <Button.Group fluid widths={2}>\n                      <Button\n                        basic\n                        color=\"green\"\n                        icon=\"eye\"\n                        name={'main' + photo.id}\n                        disabled={photo.isMain}\n                        loading={target === 'main' + photo.id && loading}\n                        onClick={(e) => setMainPhotoHandler(photo, e)}\n                      />\n                      <Button\n                        basic\n                        disabled={photo.isMain}\n                        name={photo.id}\n                        loading={target === photo.id && loading}\n                        color=\"red\"\n                        icon=\"trash\"\n                        onClick={(e) => deletePhotoHandler(photo, e)}\n                      />\n                    </Button.Group>\n                  )}\n                </Card>\n              ))}\n            </Card.Group>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n};\n\nexport default observer(ProfilePhotos);\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Tab } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport ProfileActivities from \"./ProfileActivities/ProfileActivities\";\nimport ProfileFollow from \"./ProfileFollow\";\nimport ProfilePhotos from \"./ProfilePhotos\";\n\n\nconst ProfileContent = () => {\n  const {\n    profileStore: { activeTab, setActiveTab },\n  } = useStore();\n  \n\n\n  const panes = [\n    {\n      menuItem: \"About\",\n      render: () => <ProfileAbout />,\n    },\n    { menuItem: \"Photos\", render: () => <ProfilePhotos /> },\n    { menuItem: \"Events\", render: () => <ProfileActivities/> },\n    {\n      menuItem: \"Followers\",\n      render: () => <ProfileFollow />,\n    },\n    {\n      menuItem: \"Following\",\n      render: () => <ProfileFollow />,\n    },\n  ];\n  return (\n    <Tab\n      menu={{ fluid: true, vertical: true }}\n      menuPosition=\"right\"\n      panes={panes}\n      onTabChange={(_, data) => setActiveTab(+data.activeIndex!)}\n      activeIndex={activeTab}\n    />\n  );\n};\n\nexport default observer(ProfileContent);\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport {\n  Divider,\n  Grid,\n  Header,\n  Item,\n  Reveal,\n  Segment,\n  Statistic,\n} from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\nimport FollowButton from \"./FollowButton\";\n\nconst ProfileHeader = () => {\n  const { profileStore } = useStore();\n  return (\n    <Segment>\n      <Grid>\n        <Grid.Column width={12}>\n          <Item.Group>\n            <Item>\n              <Item.Image\n                avatar\n                size=\"small\"\n                src={profileStore.profile!.image || \"/assets/user.png\"}\n              />\n              <Item.Content verticalAlign=\"middle\">\n                <Header as=\"h1\" content={profileStore.profile!.displayName} />\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Statistic.Group widths={2}>\n            <Statistic\n              label=\"Followers\"\n              value={profileStore.profile?.followersCount}\n            />\n            <Statistic\n              label=\"Following\"\n              value={profileStore.profile?.followingCount}\n            />\n          </Statistic.Group>\n          <Divider />\n          <Reveal animated=\"move\">\n            <FollowButton profile={profileStore.profile!} />\n          </Reveal>\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  );\n};\n\nexport default observer(ProfileHeader);\n","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Grid } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../app/Layout/LoadingComponent\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileContent from \"./ProfileContent\";\nimport ProfileHeader from \"./ProfileHeader\";\n\nconst ProfilePage = () => {\n  const { profileStore } = useStore();\n  const { profile, loadProfile, loadingProfile, setActiveTab} = profileStore;\n  const { username } = useParams<{ username: string }>();\n\n\n\n  useEffect(() => {\n    loadProfile(username);\n    return () => {\n      setActiveTab(0);\n    }\n  }, [username, loadProfile, setActiveTab]);\n\n  if (loadingProfile) return <LoadingComponent />;\n  else\n    return (\n      <Grid>\n        <Grid.Column width={16}>\n          {profile && (\n            <>\n              <ProfileHeader />\n              <ProfileContent />\n            </>\n          )}\n        </Grid.Column>\n      </Grid>\n    );\n};\n\nexport default observer(ProfilePage);\n","import { observer } from 'mobx-react-lite';\r\nimport React, { ComponentType } from 'react';\r\nimport { Redirect, RouteComponentProps, RouteProps } from 'react-router';\r\nimport { Route } from 'react-router-dom';\r\nimport { useStore } from '../stores/store';\r\n\r\ninterface Props extends RouteProps {\r\n    component: ComponentType<RouteComponentProps<any>> | ComponentType<any>;\r\n }\r\n\r\nconst PrivateRoute = ({component: Component, ...rest} : Props) => {\r\n    const {userStore : {isLoggedIn}} = useStore();\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => isLoggedIn ? <Component {...props}/> : <Redirect to='/'/>}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nexport default observer(PrivateRoute);","import React, { useEffect } from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport NavBar from \"./NavBar\";\r\nimport ActivityDashboard from \"../../features/Activities/Dashboard/ActivityDashboard\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Route, Switch, useLocation } from \"react-router-dom\";\r\nimport HomePage from \"../../features/home/HomePage\";\r\nimport ActivityForm from \"../../features/Activities/Form/ActivityForm\";\r\nimport ActivityDetails from \"../../features/Activities/Details/ActivityDetails\";\r\nimport TestErrors from \"../../features/errors/TestError\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport NotFound from \"../../features/errors/NotFound\";\r\nimport ServerError from \"../../features/errors/ServerError\";\r\nimport { useStore } from \"../stores/store\";\r\nimport LoadingComponent from \"./LoadingComponent\";\r\nimport ModalContainer from \"../common/modals/ModalContainer\";\r\nimport ProfilePage from \"../../features/Profiles/ProfilePage\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\n\r\nfunction App() {\r\n  const location = useLocation();\r\n  const { commonStore, userStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (commonStore.token) {\r\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\r\n    } else {\r\n      userStore.getFacebookLoginStatus().then(() => commonStore.setAppLoaded());\r\n      commonStore.setAppLoaded();\r\n    }\r\n  }, [commonStore, userStore]);\r\n\r\n  if (!commonStore.appLoaded)\r\n    return <LoadingComponent content=\"Loading app...\" />;\r\n  return (\r\n    <>\r\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\r\n      <ModalContainer />\r\n      <Route exact path=\"/\" component={HomePage} />\r\n      <Route\r\n        path={\"/(.+)\"}\r\n        render={() => (\r\n          <>\r\n            {userStore.isLoggedIn && <NavBar />}\r\n            <Container style={{ marginTop: \"7em\" }}>\r\n              <Switch>\r\n                <PrivateRoute\r\n                  exact\r\n                  path=\"/activities\"\r\n                  component={ActivityDashboard}\r\n                />\r\n                <PrivateRoute\r\n                  exact\r\n                  path=\"/activities/:id\"\r\n                  component={ActivityDetails}\r\n                />\r\n                <PrivateRoute\r\n                  key={location.key}\r\n                  path={[\"/createActivity\", \"/manage/:id\"]}\r\n                  component={ActivityForm}\r\n                />\r\n                <PrivateRoute\r\n                  path=\"/profiles/:username\"\r\n                  component={ProfilePage}\r\n                />\r\n                <PrivateRoute path=\"/errors\" component={TestErrors} />\r\n                <Route path=\"/server-error\" component={ServerError} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </Container>\r\n          </>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst ScrollToTop = () => {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n  return null;\r\n};\r\n\r\nexport default ScrollToTop;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './app/Layout/Calendar.css'\nimport \"./app/Layout/styles.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport App from \"./app/Layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store, StoreContext } from \"./app/stores/store\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from 'history';\nimport ScrollToTop from \"./app/Layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop/>\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}